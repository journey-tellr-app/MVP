{"version":3,"sources":["redux/reducers/errorsReducer.js","redux/reducers/loginModeReducer.js","redux/reducers/userReducer.js","redux/reducers/storyReducer.js","redux/reducers/templateReducer.js","redux/reducers/notificationReducer.js","redux/reducers/chapterReducer.js","redux/reducers/contributorReducer.js","redux/reducers/storyDetailReducer.js","redux/reducers/searchResultsReducer.js","redux/reducers/index.js","redux/sagas/loginSaga.js","redux/sagas/registrationSaga.js","redux/sagas/userSaga.js","redux/sagas/templateSaga.js","redux/sagas/profileSaga.js","redux/sagas/contributorSaga.js","redux/sagas/imageSaga.js","redux/sagas/storySaga.js","redux/sagas/notificationSaga.js","redux/sagas/storyDetailSaga.js","redux/sagas/searchStoriesSaga.js","redux/sagas/chapterSaga.js","redux/sagas/likesSaga.js","redux/sagas/index.js","components/Home/ContributedListItem.js","components/Home/ContributedList.js","components/Home/TopStoryItem.js","components/Home/TopStoryList.js","components/Common/SubHeader.js","components/Home/HomePage.js","components/Notification/InviteList.js","components/Notification/Notification.js","components/Profile/ContributedStoryListItem.js","components/Profile/ContributedStoryList.js","components/Profile/ProfilePage.js","components/Search/SearchBar.js","components/Search/ResultListItem.js","components/Search/SearchResult.js","components/Search/SearchMain.js","components/ImageUpload/ImageUpload.js","components/Story/ExistingStory/EditButton.js","components/Story/ExistingStory/FinalizeStoryButton.js","components/Story/ExistingStory/ChapterView/ChapterView.js","components/Story/Contributor/ContributorForm.js","components/Story/Contributor/ContributorItem.js","components/Story/Contributor/ContributorList.js","components/Story/Contributor/ContributorPopup.js","components/Story/Chapter/AddChapter.js","components/Story/ExistingStory/SummaryChapterList.js","components/Story/ExistingStory/ExistingStorySummary.js","components/Story/ExistingStory/ExistingStoryMain.js","components/Story/CreateStory/ChooseTemplate.js","components/Story/CreateStory/CreateStorySteps.js","components/Story/CreateStory/CreateStoryMain.js","components/Story/CreateStory/CreateStoryDetail.js","components/Story/CreateStory/CreateStoryChapter.js","components/Story/CreateStory/CreateStoryContributor.js","components/Nav/NavigationLink.js","components/Nav/SideDrawer.js","components/Nav/NavButton.js","components/LoginPage/LoginPage.js","components/ImageUpload/RegisterImageUpload.js","components/RegisterPage/ProfileInfo.js","components/RegisterPage/UserInfo.js","components/RegisterPage/RegisterPage.js","components/ProtectedRoute/ProtectedRoute.js","components/Faker/FakeData.js","components/App/App.js","index.js"],"names":["combineReducers","loginMessage","state","arguments","length","undefined","type","registrationMessage","loginMode","registrationState","first_name","last_name","email","password","confirm_email","confirm_password","profile_pic","userInfo","action","payload","registration","Object","objectSpread","photoObj","data","Location","initialNewStory","name","title","caption","placeholder_image","intro","initialImage","storyImage","contributedStoryReducer","topStoriesReducer","completeStoryReducer","searchStoryReducer","userStoryCountReducer","userContributionCountReducer","newStoryReducer","imageReducer","contributors","initialTemplateNewStory","initialTemplateNewChapter","templateReducer","templateNewStoryReducer","templateNewChapterReducer","invite","initialNewStoryChapter","chapterReducer","newStoryChapterReducer","filter","newState","array","map","item","index","id","updateChapterInStory","initialPending","employeeResults","pending","concat","toConsumableArray","summary","likes","contributor","chapter","searchResults","rootReducer","errors","user","story","template","notification","storyDetail","loginUser","logoutUser","loginSaga","config","regenerator_default","a","wrap","_context","prev","next","put","headers","Content-Type","withCredentials","console","log","axios","post","t0","message","error","response","status","stop","_marked","_context2","_marked2","_context3","takeLatest","_marked3","registerUser","registrationSaga","registrationSaga_marked","registrationSaga_marked2","fetchUser","userSaga","get","sent","userSaga_marked","userSaga_marked2","storyTemplate","storyTemplateDetails","templateSaga","_action","templateSaga_marked","nextAction","chapterResponse","chapterAction","templateSaga_marked2","templateSaga_marked3","editProfile","profileSaga","profileSaga_marked","profileSaga_marked2","getEmployees","addContributor","contributorSaga","contributorSaga_marked","story_id","pendingContributor","contributorSaga_marked2","contributorSaga_marked3","addImageAWS","addImagePerson","updatePicture","imageSaga","awsResponse","then","catch","nextType","chapterId","storyId","imageSaga_marked","imageSaga_marked2","imageSaga_marked3","_context4","_marked4","getMyContributions","getTopStories","addAStory","clearNewStory","getContributors","getStoryCount","getContributionCount","storySaga","serverResponse","storySaga_marked","storySaga_marked2","success","storySaga_marked3","storyAction","contributorAction","imageAction","storySaga_marked4","_context5","_marked5","storyCount","_context6","count","_marked6","contCount","_context7","_marked7","_context8","_marked8","getInvites","inviteResponse","notificationsSaga","notificationSaga_marked","_action$payload","invite_id","notificationSaga_marked2","takeEvery","notificationSaga_marked3","getIndividualStory","getChapterDetail","editChapter","editStory","getStoryContributors","getStoryLikes","completeStory","changeStoryImage","storyDetailSaga","storyDetailSaga_marked","storyDetailSaga_marked2","storyDetailSaga_marked3","storyDetailSaga_marked4","storyDetailSaga_marked5","storyDetailSaga_marked6","storyDetailSaga_marked7","dataToSend","image","storyDetailSaga_marked8","_context9","_marked9","getStoriesAuthor","getStoriesTitle","getStoriesDescription","searchStorySaga","searchStoriesSaga_marked","searchStoriesSaga_marked2","searchStoriesSaga_marked3","searchStoriesSaga_marked4","addExistingStoryChapter","changeChapterImage","chapterSaga","chapterSaga_marked","chapterSaga_marked2","chapterSaga_marked3","likeContributedStory","likeTopStory","likesSaga","likesSaga_marked","likesSaga_marked2","likesSaga_marked3","rootSaga","all","sagas_marked","ContributedListItem","handleReadStory","event","_this","props","history","push","handleLike","user_id","author","dispatch","componentDidMount","react_default","createElement","card","bordered","style","width","cover","className","alt","src","this","header_photo","actions","es_button","icon","onClick","badge","backgroundColor","color","boxShadow","row","col","span","gutter","align","Component","connect","reduxStore","ContributedList","handleStartStory","_this2","contributedStories","carousel","swipeToSlide","i","Home_ContributedListItem","key","TopStoryItem","TopStoryList","topStories","Home_TopStoryItem","Title","Typography","SubHeader","justify","level","headerText","HomePage","open","description","duration","SubHeader_SubHeader","divider","Home_ContributedList","Home_TopStoryList","InviteList","buildListItems","list","Item","Meta","avatar","href","handleInvite","itemLayout","dataSource","renderItem","size","bind","Notification","Notification_InviteList","rs","ContributedStoryListItem","fontSize","spin","handleDispatch","ContributedStoryList","Profile_ContributedStoryListItem","Text","TextArea","Input","ProfilePage","isHidden","bio","visible","file","showModal","setState","handleOk","e","submitFile","handleCancel","formData","FormData","append","appendPic","statePic","picURL","URL","createObjectURL","height","handleFileUpload","target","files","handleChange","propertyName","defineProperty","value","testThings","editedName","xs","renderStaticName","renderEditName","moment","date_created","format","ProfilePage_Title","Profile_ContributedStoryList","modal","onOk","onCancel","accept","onChange","input","placeholder","onEditBtnClick","submitEditedName","SearchBar","dropdown","sendSearch","toLowerCase","Search","Option","Select","selectBefore","es_select","defaultValue","addonBefore","onSearch","ResultListItem","photoFlipped","handleClick","handleDescription","substring","flipPhoto","_this$props$item","full_name","extra","borderStyle","typography","textAlign","paddingTop","objectFit","textDecoration","Link","to","marginBottom","Paragraph","withRouter","SearchResult","pagination","page","pageSize","hideOnSinglePage","marginTop","Search_ResultListItem","SearchMain","components_Search_SearchBar","Search_SearchResult","ImageUpload","confirmLoading","setTimeout","photoDetails","typeOfPhoto","buttonClass","_this$props$photoDeta","buttonName","_this$state","editMode","thumbnailSrc","top","okText","shape","EditButton","modalVisible","editedValue","handleModalBtn","handleEdit","handleSubmit","_this$props","colName","updatedValue","_this$props2","valueToEdit","minHeight","confirm","Modal","FinalizeStoryButton","handlePostStory","content","okType","okButtonProps","cancelText","author_id","completed","margin","ChapterView","turnPage","handleReturn","match","params","contributorSum","contributorDescription","currChapter","page_header","order","subTitle","author_name","ExistingStory_EditButton","display","chapter_photo","text","components_ImageUpload_ImageUpload","defaultCurrent","total","Number","ExistingStory_FinalizeStoryButton","ChapterViewWithRouter","AutoComplete","ContributorForm","person","alert","handleSearch","repeat","pendingContributors","c","person_id","employeeObj","ContributorForm_Option","es_alert","showIcon","auto_complete","addonAfter","ContributorItem","itemClick","ContributorList","storyContributors","Contributor_ContributorItem","ContributorPopup","loading","fullPayload","footer","ContributorBtnName","Contributor_ContributorForm","Contributor_ContributorList","AddChapter","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","openChapterModal","onInputChange","_event$target","addChapter","newOrder","chapterArray","disabled","baseState","cancelEntry","keyboard","allowClear","SummaryChapterList","readChapter","SummaryChapterList_Title","Chapter_AddChapter","textToShow","imgToShow","url","indexOf","SummaryChapterListWithRouter","Card","ExistingStorySummary","_summary$","Contributor_ContributorPopup","ExistingStorySummary_Title","ExistingStory_SummaryChapterList","ExistingStoryMain","_this$props$storyDeta","isNaN","ExistingStory_ExistingStorySummary","ExistingStory_ChapterView_ChapterView","_props$storyDetail","authorCheck","contributorObj","ChooseTemplate","es_form","label","CreateStorySteps","steps","current","Step","CreateStoryMain","nextPage","preventDefault","cancelStory","CreateStory_CreateStorySteps","layout","onSubmit","CreateStory_ChooseTemplate","htmlType","CreateStoryDetail","previousButton","hasErrors","fieldsError","keys","some","field","createStory","form","validateFieldsAndScroll","values","storyData","is_template","resetFields","_this$props$form","getFieldDecorator","getFieldsError","initialValue","rules","required","WrappedCreateStoryDetail","Form","create","CreateStoryChapter","removeChapter","k","getFieldValue","setFieldsValue","nextKeys","ch","tempArray","isTemplate","formItems","validateTrigger","whitespace","WrappedCreateStoryChapter","CreateStoryContributor","completeDataToSend","WrappedCreateStoryContributor","NavigationLink","_this$props$routeObj","routeObj","route","iconType","onClickFxn","handleSideBar","textStyle","NavLink","exact","activeClassName","notificationCount","NavigationLink_Text","SideDrawer","buildLinks","Nav_NavigationLink","profilePic","drawer","placement","closable","onClose","SideDrawer_Title","store","library","add","faBars","NavButton","bool","index_es","toString","Nav_SideDrawer","LoginPage","login","toUpperCase","handleInputChangeFor","emitEmpty","userNameInput","focus","showLoginErrorMessage","suffix","htmlFor","prefix","float","RegisterImageUpload","button","ProfileInfo","advanceRegistration","handleRegisterNavButton","ImageUpload_RegisterImageUpload","UserInfo","_this$props$registrat","RegisterPage","showRegisterErrorMessage","RegisterPage_ProfileInfo","RegisterPage_UserInfo","ComponentToShow","ComponentToProtect","component","otherProps","objectWithoutProperties","Route","assign","require","addFakePeople","addFakeStories","addFakeChapters","addFakeLikes","App","HashRouter","Nav_NavButton","Switch","Redirect","from","components_ProtectedRoute_ProtectedRoute","path","FakeData","render","back_top","sagaMiddleware","createSagaMiddleware","middlewareList","createStore","applyMiddleware","apply","run","ReactDOM","react_redux_es","components_App_App","document","getElementById"],"mappings":"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","file":"static/js/main.dd0c49e1.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\n\n// loginMessage holds the string that will display\n// on the login screen if there's an error\nconst loginMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_LOGIN_ERROR':\n      return '';\n    case 'LOGIN_INPUT_ERROR':\n      return 'Enter your username and password!';\n    case 'LOGIN_FAILED':\n      return 'Oops! The username and password didn\\'t match. Try again!';\n    case 'LOGIN_FAILED_NO_CODE':\n      return 'Oops! Something went wrong! Is the server running?';\n    default:\n      return state;\n  }\n};\n\n// registrationMessage holds the string that will display\n// on the registration screen if there's an error\nconst registrationMessage = (state = '', action) => {\n  switch (action.type) {\n    case 'CLEAR_REGISTRATION_ERROR':\n      return '';\n    case 'REGISTRATION_INPUT_ERROR':\n      return 'Choose a username and password!';\n    case 'REGISTRATION_FAILED':\n      return 'Oops! That didn\\'t work. The username might already be taken. Try again!';\n    default:\n      return state;\n  }\n};\n\n// make one object that has keys loginMessage, registrationMessage\n// these will be on the redux state at:\n// state.errors.loginMessage and state.errors.registrationMessage\nexport default combineReducers({\n  loginMessage,\n  registrationMessage,\n});\n","const loginMode = (state = 'login', action) => {\n    switch (action.type) {\n      case 'SET_TO_LOGIN_MODE':\n        return 'login';\n      case 'SET_TO_REGISTER_MODE':\n        return 'register';\n      default:\n        return state;\n    }\n  };\n\n// loginMode will be on the redux state at:\n// state.loginMode\n  export default loginMode;\n  ","import { combineReducers } from 'redux';\n\nconst userInfo = (state = {}, action) => {\n  switch (action.type) {\n    case 'SET_USER':\n      return action.payload;\n    case 'UNSET_USER':\n      return {};\n    default:\n      return state;\n  }\n};\n\nconst registrationState = {\n  first_name: '',\n  last_name: '',\n  email: '',\n  password: '',\n  confirm_email: '',\n  confirm_password: '',\n  profile_pic: './images/headshot-placeholder.jpg', \n}\nconst registration = (state = registrationState, action) => {\n  switch (action.type) {\n    case 'UPDATE_REGISTRATION':\n      return { ...state, ...action.payload };\n    case 'ADD_IMAGE_REGISTER':\n      const photoObj = { profile_pic: action.payload.data.Location}\n      return {...state, ...photoObj}\n    case 'CLEAR_REGISTRATION':\n      return registrationState;\n    default:\n      return state;\n  }\n\n}\n\n// user will be on the redux state at:\n// state.user\nexport default combineReducers({\n  userInfo,\n  registration,\n});\n","import { combineReducers } from 'redux';\n\n//this reducer will return all the \n//stories a user is/has contributed to.\n//To be used on the home page\n//this reducer currently gets authored stories, not contributed \nconst contributedStoryReducer = (state = [], action) => {\n    if(action.type === 'SET_STORY_CONTRIBUTIONS') {\n        return action.payload;\n    }\n    return state;\n}\n\n//This reducer will return the top 10 stories at the company.\n//To be used on the home page.\nconst topStoriesReducer = (state = [], action) => {\n    if(action.type === 'SET_TOP_STORIES') {\n        return action.payload;\n    }\n    return state;\n}\n\nconst completeStoryReducer = (state = [], action) => {\n    if(action.type === 'SET_COMPLETE_STORY') {\n        return action.payload;\n    }\n    return state;\n}\n\nconst searchStoryReducer = (state = [], action) => {\n    if(action.type === 'SET_SEARCH_STORY') {\n        return action.payload;\n    }\n    return state;\n}\n\nconst userStoryCountReducer = (state = [], action) => {\n    if(action.type === 'SET_USER_STORY_COUNT') {\n        return action.payload;\n    }\n    return state;\n}\n\nconst userContributionCountReducer = (state = [], action) => {\n    if (action.type === 'SET_USER_CONTRIBUTION_COUNT') {\n        return action.payload;\n    }\n    return state;\n}\n\n// initial value for newStoryReducer used to clear the reducer\nconst initialNewStory = {name: '', title: '', caption: '', placeholder_image: '', intro: ''};\nconst newStoryReducer = (state = initialNewStory, action) => {\n    if(action.type === 'SET_NEW_STORY') {\n        return action.payload;\n    } else if(action.type === 'RESET_NEW_STORY') {\n        return initialNewStory;\n    }\n    return state;\n}\n\n// initial value for newStoryReducer used to clear the reducer\nconst initialImage = {storyImage: \"/images/placeholder.png\"};\nconst imageReducer = (state = initialImage, action) => {\n    if (action.type === 'ADD_IMAGE_STORY') {\n        return {storyImage: action.payload.data.Location};\n    } else if(action.type === 'RESET_IMAGE_STORY') {\n        return initialImage;\n    }\n    return state;\n}\n\nconst contributors = (state = [], action) => {\n    // console.log(action);\n    if (action.type === 'SET_CONTRIBUTORS') {\n        return action.payload;\n    }\n    return state;\n}\n\nexport default combineReducers({\n    contributedStoryReducer, // used on the home page\n    topStoriesReducer, //used the home page\n    completeStoryReducer, // used for the main story view page\n    searchStoryReducer, // for use with the search page\n    userStoryCountReducer, // for user profile page\n    userContributionCountReducer, // for user profile page\n    newStoryReducer, // called when creating a new story\n    imageReducer, //holds AWS image location\n    contributors //this returns the names of all contributors to a story (for home page)\n});","import { combineReducers } from 'redux';\n\nconst templateReducer = ( state = [], action ) => {\n    // console.log(`in templateReducer: ${action.type}`);\n    if(action.type === 'SET_TEMPLATE') {\n        return action.payload;\n    } else if(action.type === 'SET_TEMPLATE_STORY_DROPDOWN') {\n        return action.payload;\n    }\n    return state;\n}\n\n// initial value for newStoryReducer used to clear the reducer\nconst initialTemplateNewStory = {name: '', title: '', caption: '', placeholder_image: '', intro: ''};\nconst templateNewStoryReducer = (state = initialTemplateNewStory, action) => {\n    if(action.type === 'SET_TEMPLATE_NEW_STORY') {\n        return action.payload;\n    } else if(action.type === 'SET_TEMPLATE_NEW_CREATE') {\n        return {name: 'initial'};\n    } else if(action.type === 'RESET_TEMPLATE_NEW_STORY') {\n        return initialTemplateNewStory;\n    }\n    return state;\n}\n\n// initial value for initialTemplateChapter used to clear the reducer\nconst initialTemplateNewChapter = [];\nconst templateNewChapterReducer = (state = initialTemplateNewChapter, action) => {\n    if(action.type === 'SET_TEMPLATE_NEW_CHAPTER') {\n        return action.payload;\n    } else if(action.type === 'RESET_TEMPLATE_NEW_CHAPTER') {\n        return initialTemplateNewChapter;\n    }\n    return state;\n}\n\nexport default combineReducers({\n    templateReducer, // used to set the dropdown\n    templateNewStoryReducer, // sets story details from a template\n    templateNewChapterReducer, // sets chapter details from a template\n});","import { combineReducers } from 'redux';\n\nconst invite = (state = [], action) => {\n    switch (action.type) {\n        case ('SET_INVITES'):\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nexport default combineReducers({\n    invite,\n});","import { combineReducers } from 'redux';\n\nconst chapterReducer = (state = {}, action) => {\n    if(action.type === 'SET_CHAPTER') {\n        return action.payload;\n    }\n    return state;\n}\n\nconst initialNewStoryChapter = [];\nconst newStoryChapterReducer = (state = initialNewStoryChapter, action) => {\n    if(action.type === 'SET_NEW_STORY_CHAPTER') {\n        return action.payload;\n    } else if(action.type === 'REMOVE_NEW_STORY_CHAPTER') {\n        let nextState = state.filter(newState => newState !== action.payload);\n        return nextState;\n    } else if(action.type === 'RESET_NEW_STORY_CHAPTER') {\n        return initialNewStoryChapter;\n    } else if(action.type === 'UPDATE_NEW_STORY_CHAPTER') {\n        let updatedChapter = updateChapterInStory(state, action.payload);\n        return updatedChapter;\n    }\n    return state;\n}\n\n// function will only update a specific chapter in the reducer\nfunction updateChapterInStory(array, action) {\n    return array.map((item, index) => {\n        if (index !== action.id) {\n            // This isn't the item we care about - keep it as-is\n            return item\n        }\n        // Otherwise, this is the one we want - return an updated value\n        return {...item,...action.item}\n    });\n  }\n\nexport default combineReducers({\n    chapterReducer, // set the story chapters for viewing\n    newStoryChapterReducer, // saves chapters added when creating a new story\n});","import { combineReducers } from 'redux';\n\nconst employeeResults = (state = [], action) => {\n    switch(action.type){\n        case('SET_EMPLOYEE_RESULTS'):\n            return action.payload;\n        case('CLEAR_EMPLOYEE_RESULTS'):\n            return [];\n        default:\n            return state;\n    }\n}\n\n// initial value for pending contributor\nconst initialPending = []\nconst pending = (state = initialPending, action) => {\n    switch (action.type) {\n        case ('ADD_PENDING_CONTRIBUTORS'):\n            return [...state,  action.payload];\n        case ('REMOVE_PENDING_CONTRIBUTOR'):\n            return state.filter( item => item !== action.payload );\n        case ('RESET_PENDING_CONTRIBUTOR'):\n            return initialPending;\n        default:\n            return state;\n    }\n}\n\n\n\nexport default combineReducers({\n    employeeResults,\n    pending,\n});","import { combineReducers } from 'redux';\n\n//this reducer currently gets authored stories, not contributed and is duplicate\nconst contributedStoryReducer = (state = [], action) => {\n    if (action.type === 'SET_STORY_CONTRIBUTIONS') {\n        return action.payload;\n    }\n    return state;\n}\n\n//this will return a single story detail on the\n//existing-story/:id page\nconst summary = (state = [], action) => {\n    if (action.type === 'SET_STORY_DETAIL') {\n        return action.payload;\n    }\n    return state;\n}\n\nconst likes = (state = [], action) => {\n    if (action.type === 'SET_STORY_DETAIL_LIKES') {\n        return action.payload;\n    }\n    return state;\n}\n\n//this will return all of the contributors to a particular story\nconst contributor = (state = [], action) => {\n    if (action.type === 'SET_STORY_DETAIL_CONTRIBUTOR') {\n        return action.payload;\n    }\n    return state;\n}\n\nconst chapter = (state = [], action) => {\n    if (action.type === 'SET_STORY_DETAIL_CHAPTER') {\n        return action.payload;\n    }\n    return state;\n}\n\nexport default combineReducers({\n    contributedStoryReducer, \n    summary,\n    likes,\n    contributor,\n    chapter,\n});","const searchResults = (state = [], action) => {\n    switch (action.type) {\n        case ('SET_STORY_SEARCH_RESULTS'):\n            return action.payload;\n        default:\n            return state;\n    }\n}\n\nexport default searchResults;\n","import { combineReducers } from 'redux';\nimport errors from './errorsReducer';\nimport loginMode from './loginModeReducer';\nimport user from './userReducer';\nimport story from './storyReducer.js';\nimport template from './templateReducer.js';\nimport notification from './notificationReducer.js';\nimport chapter from './chapterReducer.js';\nimport contributor from './contributorReducer.js';\nimport storyDetail from './storyDetailReducer';\nimport searchResults from './searchResultsReducer';\n\n// rootReducer is the primary reducer for our entire project\n// It bundles up all of the other reducers so our project can use them.\n// This is imported in index.js as rootSaga\n\n// Lets make a bigger object for our store, with the objects from our reducers.\n// This is what we get when we use 'state' inside of 'mapStateToProps'\nconst rootReducer = combineReducers({\n  errors, // contains registrationMessage and loginMessage\n  loginMode, // will have a value of 'login' or 'registration' to control which screen is shown\n  user, // will have an id and username if someone is logged in\n  story, // contains reducers for all the story pages\n  template, // templates for assistance in creating a story\n  notification, // list of user notifications\n  chapter, // loads chapters for a story\n  contributor, // list of app users to be contributors\n  storyDetail,\n  searchResults, //results back from server after search all stories\n});\n\nexport default rootReducer;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// ant design import\nimport { message } from 'antd';\n\n// worker Saga: will be fired on \"LOGIN\" actions\nfunction* loginUser(action) {\n  try {\n    // clear any existing error on the login page\n    yield put({ type: 'CLEAR_LOGIN_ERROR' });\n\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n    console.log(action.payload);\n    \n    \n    // send the action.payload as the body\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    yield axios.post('api/user/login', action.payload, config);\n    \n    // after the user has logged in\n    // get the user information from the server\n    yield put({type: 'FETCH_USER'});\n  } catch (error) {\n    console.log('Error with user login:', error);\n    message.error('Login error');\n    if (error.response.status === 401) {\n      // The 401 is the error status sent from passport\n      // if user isn't in the database or\n      // if the username and password don't match in the database\n      yield put({ type: 'LOGIN_FAILED' });\n    } else {\n      // Got an error that wasn't a 401\n      // Could be anything, but most common cause is the server is not started\n      yield put({ type: 'LOGIN_FAILED_NO_CODE' });\n    }\n  }\n}\n\n// worker Saga: will be fired on \"LOGOUT\" actions\nfunction* logoutUser(action) {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // when the server recognizes the user session\n    // it will end the session\n    yield axios.post('api/user/logout', config);\n\n    // now that the session has ended on the server\n    // remove the client-side user object to let\n    // the client-side code know the user is logged out\n    yield put({ type: 'UNSET_USER' });\n\n  } catch (error) {\n    console.log('Error with user logout:', error);\n    message.error('Logout error');\n  }\n}\n\nfunction* loginSaga() {\n  yield takeLatest('LOGIN', loginUser);\n  yield takeLatest('LOGOUT', logoutUser);\n}\n\nexport default loginSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// ant design import\nimport { message } from 'antd';\n\n// worker Saga: will be fired on \"REGISTER\" actions\nfunction* registerUser(action) {\n  try {\n    // console.log('in registeruser');\n    \n    // clear any existing error on the registration page\n    yield put({ type: 'CLEAR_REGISTRATION_ERROR' });\n\n    // passes the username and password from the payload to the server\n    yield axios.post('api/user/register', action.payload);\n\n    // automatically log a user in after registration\n    yield put({ type: 'LOGIN', payload: action.payload });\n    \n    // set to 'login' mode so they see the login screen\n    // after registration or after they log out\n    yield put({type: 'SET_TO_LOGIN_MODE'});\n    yield put({type: 'CLEAR_REGISTRATION'});\n  } catch (error) {\n      console.log('Error with user registration:', error);\n      message.error('Error in registration');\n      yield put({type: 'REGISTRATION_FAILED'});\n  }\n}\n\nfunction* registrationSaga() {\n  yield takeLatest('REGISTER', registerUser);\n}\n\nexport default registrationSaga;\n","import axios from 'axios';\nimport { put, takeLatest } from 'redux-saga/effects';\n\n// worker Saga: will be fired on \"FETCH_USER\" actions\nfunction* fetchUser() {\n  try {\n    const config = {\n      headers: { 'Content-Type': 'application/json' },\n      withCredentials: true,\n    };\n\n    // the config includes credentials which\n    // allow the server session to recognize the user\n    // If a user is logged in, this will return their information\n    // from the server session (req.user)\n    const response = yield axios.get('api/user', config);\n\n    // now that the session has given us a user object\n    // with an id and username set the client-side user object to let\n    // the client-side code know the user is logged in\n    yield put({ type: 'SET_USER', payload: response.data });\n    yield put({type: \"GET_INVITES\"});\n  } catch (error) {\n    console.log('User get request failed', error);\n  }\n}\n\nfunction* userSaga() {\n  yield takeLatest('FETCH_USER', fetchUser);\n}\n\nexport default userSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// ant design import\nimport { message } from 'antd';\n\nfunction* storyTemplate(action) {\n  try {\n    //gets template story id and name for dropdown\n    const response = yield axios.get('/template');\n    const action = {type: 'SET_TEMPLATE_STORY_DROPDOWN', payload: response.data};\n    yield put(action);\n  } catch (error) {\n    console.log('Error with storyTemplate:', error);\n    message.error('There was a problem when setting the templates');\n  }\n}\n\n// get the story and chapter details from a template then set the reducers\nfunction* storyTemplateDetails(action) {\n  try {\n      // get template story details \n      const response = yield axios.get(`/template/story/${action.payload}`);\n      // set the template story\n      const nextAction = { type: 'SET_TEMPLATE_NEW_STORY', payload: response.data };\n      yield put(nextAction);\n      // get chapter details for a story\n      const chapterResponse = yield axios.get(`/template/chapter/${action.payload}`);\n      // set the chapter details\n      const chapterAction = { type: 'SET_TEMPLATE_NEW_CHAPTER', payload: chapterResponse.data };\n      yield put(chapterAction);\n  } catch (error) {\n      console.log('Error with storyTemplateDetails:', error);\n      message.error('There was a problem using the story template');\n  }\n}\n\nfunction* templateSaga() {\n  yield takeLatest('GET_TEMPLATE_STORY', storyTemplate);\n  yield takeLatest('GET_TEMPLATE_DETAILS', storyTemplateDetails);\n}\n\nexport default templateSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// ant design import\nimport { message } from 'antd';\n\n// function* getStats(action) {\n//     try {\n//         //gets story and contribution stats by counting tables\n//         yield console.log('in getStats with action:', action)\n//     } catch (error) {\n//         console.log('Error with getStats:', error);\n//         message.error('Problem counting stats');\n//     }\n// }\n\nfunction* editProfile(action) {\n    try {\n        yield axios.put(`/api/user/update-profile`, action.payload);\n        yield put({ type: \"FETCH_USER\", });\n    } catch (error) {\n        console.log('Error with editProfile:', error);\n        message.error('Error editing the profile');\n    }\n}\n\nfunction* profileSaga() {\n    // yield takeLatest('GET_TEMPLATE_STORY', getStats);\n    yield takeLatest('EDIT_PROFILE', editProfile);\n}\n\nexport default profileSaga;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// ant design import\nimport { message } from 'antd';\n\nfunction* getEmployees(action) {\n    try {\n        //autopopulates search results for adding contributors\n        const response = yield axios.get(`/invite/${action.payload}`);\n        yield put({type: 'SET_EMPLOYEE_RESULTS', payload: response.data})\n    } catch (error) {\n        console.log('Error with getEmployees saga', error);\n        message.error('Error getting contributors for search');\n    }\n}\n\n// function* getContributor(action) {\n//     try {\n//         //gets contributors for a given story\n//         yield console.log('in getContributor saga with:', action)\n//     } catch (error) {\n//         console.log('Error with storyTemplateDetails:', error);\n//         message.error('Error getting story contributors');\n//     }\n// }\n\n// function* deleteContributor(action) {\n//     try {\n//         //delete contributor from story\n//         yield console.log('in deleteContributor saga with:', action)\n//     } catch (error) {\n//         console.log('Error with storyTemplateDetails:', error);\n//         message.error('Error removing the contributor');\n//     }\n// }\n\nfunction* addContributor(action) {\n    try {\n        //add contributor to story\n        // yield console.log('in addContributor saga with:', action)\n        yield axios.post(`/invite/contributor/${action.payload.story_id}`, action.payload.pendingContributor )\n    } catch (error) {\n        console.log('Error with storyTemplateDetails:', error);\n        message.error('Error adding a contributor');\n    }\n}\n\n\n\nfunction* contributorSaga() {\n    yield takeLatest('GET_EMPLOYEES', getEmployees);\n    // yield takeLatest('GET_CONTRIBUTOR', getContributor);\n    // yield takeLatest('DELETE_CONTRIBUTOR', deleteContributor);\n    yield takeLatest('ADD_CONTRIBUTOR', addContributor);\n}\n\nexport default contributorSaga;","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// ant design import\nimport { message } from 'antd';\n\nfunction* addImageAWS(action) {\n    // console.log('in addImage AWS', action);\n    let awsResponse;\n    try {\n            yield axios.post(`/awsS3`, action.payload, {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                }\n            })\n            .then(response => {\n                awsResponse = response; \n                // console.log(awsResponse);\n\n            }).catch(error => {\n                console.log(error);\n            });\n        } catch (error) {\n            console.log('Error with addImageAWS:', error);\n            message.error('Error sending the image to AWS');\n        }\n    let nextAction = {\n        type: action.nextType,\n        payload: awsResponse,\n        chapterId: action.chapterId,\n        storyId: action.storyId,\n    }\n    // console.log(`addImageAWS nextaction`, nextAction);\n    \n    yield put(nextAction);\n}\n\nfunction* addImagePerson(action) {\n\n    try {\n        yield axios.put(`/api/user/${action.id}`, action.payload);\n        yield put({ type: 'FETCH_USER' });\n    } catch (error) {\n        console.log('Error with addImage:', error);\n        message.error('Error adding a user profile image');\n    }\n\n\n}\n\nfunction* updatePicture(action) {\n\n    try {\n        yield axios.put(`/api/user/${action.id}`, action.payload);\n        yield put({ type: 'FETCH_USER' });\n    } catch (error) {\n        console.log('Error with addImage:', error);\n        message.error('Error updating user profile image');\n    }\n\n\n}\n\nfunction* imageSaga() {\n    yield takeLatest('ADD_IMAGE_AWS', addImageAWS);\n    yield takeLatest('ADD_IMAGE_PERSON', addImagePerson);\n    yield takeLatest('UPDATE_PICTURE', updatePicture);\n\n\n}\n\nexport default imageSaga;\n\n","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// ant design import\nimport { message } from 'antd';\n\nfunction* getMyContributions(action) {\n    try {\n        const serverResponse = yield axios.get('story/story-contributions');\n        yield put({ type: 'SET_STORY_CONTRIBUTIONS', payload: serverResponse.data });\n\n    } catch (error) {\n        console.log(`Error in getMyContributions: ${error}`);\n        message.error('There was a problem when setting story contributions');\n    }\n}\n\nfunction* getTopStories(action) {\n    try {\n        // console.log('in getTopStories' );\n        const serverResponse = yield axios.get('story/recent');\n\n        yield put({ type: 'SET_TOP_STORIES', payload: serverResponse.data });\n\n    } catch (error) {\n        console.log(`Error in getStories: ${error}`);\n        message.error('There was a problem getting your top stories');\n    }\n}\n\n// function* storyTemplate(action) {\n//     try {\n//         yield console.log('in storyTemplate saga:')\n//     } catch (error) {\n//         console.log('Error with storyTemplate:', error);\n//         message.error('There was a problem with the template');\n//     }\n// }\n\n// send a new story to the server\nfunction* addAStory(action) {\n    try {\n        // POST a new story and get back the story id from the server\n        const response = yield axios.post('/story', action.payload.story);\n\n        // only send chapter data if it exists\n        if(action.payload.chapter.length !== 0) {\n            // tell the chapter route that the story is new so order is assigned\n            const newStory = true;\n            // send a POST request for all chapter data associated with the new story\n            yield axios.post(`/chapter/${response.data}/${newStory}`, action.payload.chapter);\n        } // end if\n\n        // only send contributor data if it exists\n        if(action.payload.contributor.length !== 0) {\n            // add all contributors associated with a story to the server\n            yield axios.post(`/invite/contributor/${response.data}`, action.payload.contributor);\n        } // end if\n        \n        // clear the new story reducers\n        message.success('You successfully created a story!');\n        const nextAction = { type: 'CLEAR_NEW_STORY' };\n        yield put(nextAction);\n    } catch (error) {\n        // error message and alert when trying to add a story fails\n        console.log(`Add story failed: ${error}`);\n        message.error('There was a problem when creating your story');\n    }\n}\n\n// reset story, image, chapter and contributor to initial values\nfunction* clearNewStory() {\n    try {\n        const storyAction = { type: 'RESET_NEW_STORY' };\n        yield put(storyAction);\n        const chapterAction = { type: 'RESET_NEW_STORY_CHAPTER' };\n        yield put(chapterAction);\n        const contributorAction = { type: 'RESET_PENDING_CONTRIBUTOR' };\n        yield put(contributorAction);\n        const imageAction = { type: 'RESET_IMAGE_STORY' };\n        yield put(imageAction);\n    } catch (error) {\n        // error message when clearing new story inputs\n        console.log(`Error in clearNewStory saga: ${error}`);\n        message.error('Error with clearing stories');\n    }\n}\n\nfunction* getContributors(action) {\n    try {\n        // console.log(action.payload);\n        const serverResponse = yield axios.get(`story/contributors/${action.payload}`);\n        yield put({type: 'SET_CONTRIBUTORS', payload: serverResponse.data});\n\n    } catch(e) {\n        console.log(`Error in getContributors saga: ${e}`);\n        message.error('Error getting contributors');\n    }\n}\n\nfunction* getStoryCount() {\n    try {\n        const storyCount = yield axios.get(`story/count/`);\n        yield put({type: 'SET_USER_STORY_COUNT', payload: storyCount.data.count})\n    } catch (e) {\n        console.log(`Error in getStoryCount saga: ${e}`);\n        message.error('Error getting story count');\n    }\n}\n\nfunction* getContributionCount() {\n    try {\n        const contCount = yield axios.get(`story/count-contributions/`);\n        yield put({ type: 'SET_USER_CONTRIBUTION_COUNT', payload: contCount.data.count })\n    } catch (e) {\n        console.log(`Error in getStoryCount saga: ${e}`);\n        message.error('Error getting story count');\n    }\n}\n\n\nfunction* storySaga() {\n    yield takeLatest('GET_MY_CONTRIBUTIONS', getMyContributions);\n    yield takeLatest('GET_TOP_STORIES', getTopStories);\n    // yield takeLatest('GET_TEMPLATE_STORY', storyTemplate);\n    yield takeLatest('POST_NEW_STORY', addAStory);\n    yield takeLatest('CLEAR_NEW_STORY', clearNewStory);\n    yield takeLatest('GET_CONTRIBUTORS', getContributors);\n    yield takeLatest('GET_STORY_COUNT', getStoryCount)\n    yield takeLatest('GET_CONTRIBUTION_COUNT', getContributionCount)\n}\n\nexport default storySaga;","import { put, takeLatest, takeEvery } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// ant design import\nimport { message } from 'antd';\n\nfunction* getInvites(action) {\n    try {\n        const response = yield axios.get(`/invite/contributor`);\n        yield put({ type: 'SET_INVITES', payload: response.data })\n    } catch (error) {\n        console.log('Error with getInvites saga', error);\n        message.error('Problem with getting invites');\n    }\n}\n\nfunction* inviteResponse(action) {\n    try {\n        const {invite_id, status } = action.payload;\n        yield axios.put(`/invite/contributor/${invite_id}/${status}`);\n        yield put({type: 'GET_INVITES' });\n    } catch(e){\n        console.log('Error in inviteResponse saga', e);\n        message.error('Problem with invite response');\n    }\n}\n\nfunction* notificationsSaga() {\n    yield takeLatest('GET_INVITES', getInvites);\n    yield takeEvery('SEND_INVITE_RESPONSE', inviteResponse);\n}\n\nexport default notificationsSaga;","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// ant design import\nimport { message } from 'antd';\n\nfunction* getIndividualStory(action) {\n    try {\n        // console.log('in getIndividualStory saga, action.payload: ', action.payload);\n        const serverResponse = yield axios.get(`story/detail/summary/${action.payload}`);\n        yield put({ type: 'SET_STORY_DETAIL', payload: serverResponse.data });\n    } catch (error) {\n        console.log(`Error in getting individual story: ${error}`);\n        message.error('Error loading a story');\n    }\n}\n\n//chapers\nfunction* getChapterDetail(action) {\n    try {\n        const response = yield axios.get(`story/detail/chapter/${action.payload}`);\n        yield put({ type: 'SET_STORY_DETAIL_CHAPTER', payload: response.data });\n    } catch (error) {\n        console.log(`Error in getChapterDetail saga:`, error);\n        message.error('Error loading the chapter detail');\n    }\n}\n\nfunction* editChapter(action) {\n    try {\n        const response = yield axios.put(`/chapter`, action.payload);\n        yield put({ type: 'GET_STORY_CHAPTER_DETAIL', payload: response.data[0].story_id });\n    }catch(e){\n        console.log('Error in editChapter saga:', e);\n        message.error('Error in chapter edit');\n    }\n}\n\nfunction* editStory(action) {\n    try {\n        yield axios.put('/story', action.payload);\n        yield put({ type: 'GET_INDIVIDUAL_STORY', payload: action.payload.id })\n    } catch (e) {\n        console.log('Error in editStory saga:', e);\n        message.error('Error in story edit');\n    }\n}\n\n//contributors\nfunction* getStoryContributors(action) {\n    try {\n        // console.log('getStoryContributors action: ', action);\n        const serverResponse = yield axios.get(`/story/detail/contributor/${action.payload}`);\n\n        yield put({ type: 'SET_STORY_DETAIL_CONTRIBUTOR', payload: serverResponse.data });\n    } catch (e) {\n        console.log(`Error getting story contributors: ${e}`);\n        message.error('Error getting the story contributors');\n    }\n}\n\n//likes for individual stories\nfunction* getStoryLikes(action) {\n    try {\n\n        const serverResponse = yield axios.get(`/story/detail/likes/${action.payload}`, action.payload);\n        yield put({ type: 'SET_STORY_DETAIL_LIKES', payload: serverResponse.data });\n        \n    } catch (e) {\n        console.log(`Error getting story likes: ${e}`);\n        message.error('Error getting story likes');\n    }\n}\n\n//completes story making it uneditable\nfunction* completeStory(action) {\n    try {\n        const storyId = action.payload;\n        yield axios.put(`/story/complete/${storyId}`);\n        yield put({ type: 'GET_INDIVIDUAL_STORY', payload: storyId })\n    } catch (e) {\n        console.log('Error finalizing story:', e)\n    }\n}\n\n// change the story image in edit mode\nfunction* changeStoryImage(action) {\n    try {\n        // package the image data\n        let dataToSend = { image: action.payload.data.Location };\n        // replace the old picture with the new picture\n        yield axios.put(`/story/image/${action.storyId}`, dataToSend);\n        // refresh the story with the added photo\n        yield put({type: 'GET_INDIVIDUAL_STORY', payload: action.storyId});\n    } catch(error) {\n        // error message when editing the story image\n        console.log(`Error in changeStoryImage: ${error}`);\n        message.error('Error when updating story image');\n    }\n}\n\nfunction* storyDetailSaga() {\n    yield takeLatest('GET_INDIVIDUAL_STORY', getIndividualStory);\n    yield takeLatest('GET_STORY_CHAPTER_DETAIL', getChapterDetail);\n    yield takeLatest('GET_STORY_CONTRIBUTORS', getStoryContributors);\n    yield takeLatest('EDIT_CHAPTER', editChapter);\n    yield takeLatest('EDIT_STORY', editStory);\n    yield takeLatest('GET_STORY_LIKES', getStoryLikes);\n    yield takeLatest('COMPLETE_STORY', completeStory);\n    yield takeLatest('ADD_IMAGE_EDIT_STORY_IMAGE', changeStoryImage);\n}\n\nexport default storyDetailSaga;","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// ant design import\nimport { message } from 'antd';\n\n// get stories searching by author\nfunction* getStoriesAuthor(action) {\n    try {\n        // console.log('in gSA');\n        // call to the database for getting stories\n        const serverResponse = yield axios.get(`/search-story/author/${action.payload}`);\n        yield put({ type: 'SET_STORY_SEARCH_RESULTS', payload: serverResponse.data });\n    } catch (error) {\n        // error message when trying to add a story\n        console.log(`getStoriesAuthor failed: ${error}`);\n        message.error('Error serching by author');\n    }\n}\nfunction* getStoriesTitle(action) {\n    try {\n        // console.log('in gST');\n        \n        // call to the database for getting stories\n        const serverResponse = yield axios.get(`/search-story/title/${action.payload}`);\n        yield put({ type: 'SET_STORY_SEARCH_RESULTS', payload: serverResponse.data });\n    } catch (error) {\n        // error message when trying to add a story\n        console.log(`getStoriesAuthor failed: ${error}`);\n        message.error('Error serching by title');\n    }\n}\nfunction* getStoriesDescription(action) {\n    try {\n        // console.log('in gSD');\n        // call to the database for getting stories\n        const serverResponse = yield axios.get(`/search-story/description/${action.payload}`);\n        yield put({ type: 'SET_STORY_SEARCH_RESULTS', payload: serverResponse.data });\n    } catch (error) {\n        // error message when trying to add a story\n        console.log(`getStoriesAuthor failed: ${error}`);\n        message.error('Error serching by description');\n    }\n}\n\nfunction* searchStorySaga() {\n    yield takeLatest('GET_SEARCH_STORIES_AUTHOR', getStoriesAuthor);\n    yield takeLatest('GET_SEARCH_STORIES_TITLE', getStoriesTitle);\n    yield takeLatest('GET_SEARCH_STORIES_DESCRIPTION', getStoriesDescription);\n}\n\nexport default searchStorySaga;","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// ant design import\nimport { message } from 'antd';\n\nfunction* addExistingStoryChapter(action) {\n    try {\n        // tell the chapter route that the story exists so order is not assigned\n        const newStory = false;\n        // call to the chapter route and POST the added chapter\n        yield axios.post(`chapter/${action.payload.storyId}/${newStory}`, action.payload.chapter);\n        // refresh the story chapter detail with the added chapter\n        yield put({type: 'GET_STORY_CHAPTER_DETAIL', payload: action.payload.storyId});\n    } catch(error) {\n        // console log and error message for addExistingStoryChapter\n        console.log(`Error in addExistingStoryChapter: ${error}`);\n        message.error('Error updating the chapter');\n    }\n}\n\nfunction* changeChapterImage(action) {\n    try {\n        // package the image data\n        let dataToSend = { image: action.payload.data.Location };\n        // replace the old picture with the new picture\n        const response = yield axios.put(`/chapter/image/${action.chapterId}`, dataToSend);\n        // refresh the chapter detail with the added photo\n        yield put({type: 'GET_STORY_CHAPTER_DETAIL', payload: response.data});\n    } catch(error) {\n        // error message when editing the chapter image\n        console.log(`Error in changeChapterImage: ${error}`);\n        message.error('Error when updating chapter image');\n    }\n}\n\nfunction* chapterSaga() {\n    yield takeLatest('ADD_EXISTING_STORY_CHAPTER', addExistingStoryChapter);\n    yield takeLatest('ADD_IMAGE_CHAPTER', changeChapterImage);\n}\n\nexport default chapterSaga;","import { put, takeLatest } from 'redux-saga/effects';\nimport axios from 'axios';\n\n// ant design import\nimport { message } from 'antd';\n\nfunction* likeContributedStory(action) {\n    try {\n        yield axios.post('/like', action.payload);\n        yield put({ type: 'GET_MY_CONTRIBUTIONS'});\n    } catch(error) {\n        console.log(`Error in likeContributedStory saga: ${error}`);\n        message.error('Error getting likes for my contributed stories');\n    }\n}\n\nfunction* likeTopStory(action) {\n    try {\n        yield axios.post('/like', action.payload);\n        yield put({ type: 'GET_TOP_STORIES'});\n    } catch(error) {\n        console.log(`Error in likeTopStory saga: ${error}`);\n        message.error('Error liking the top stories');\n    }\n}\n\nfunction* likesSaga() {\n    yield takeLatest('LIKE_CONTRIBUTED_STORY', likeContributedStory);\n    yield takeLatest('LIKE_TOP_STORY', likeTopStory);\n}\n\nexport default likesSaga;","import { all } from 'redux-saga/effects';\nimport loginSaga from './loginSaga';\nimport registrationSaga from './registrationSaga';\nimport userSaga from './userSaga';\nimport templateSaga from './templateSaga';\nimport profileSaga from './profileSaga';\nimport contributorSaga from './contributorSaga';\nimport imageSaga from './imageSaga';\nimport storySaga from './storySaga';\nimport notificationsSaga from './notificationSaga';\nimport storyDetailSaga from './storyDetailSaga';\nimport searchStorySaga from './searchStoriesSaga';\nimport chapterSaga from './chapterSaga';\nimport likesSaga from './likesSaga';\n\n// rootSaga is the primary saga.\n// It bundles up all of the other sagas so our project can use them.\n// This is imported in index.js as rootSaga\n\n// some sagas trigger other sagas, as an example\n// the registration triggers a login\n// and login triggers setting the user\nexport default function* rootSaga() {\n  yield all([\n    likesSaga(),\n    loginSaga(),\n    registrationSaga(),\n    userSaga(),\n    templateSaga(),\n    profileSaga(),\n    contributorSaga(),\n    imageSaga(),\n    storySaga(),\n    notificationsSaga(),\n    storyDetailSaga(),\n    searchStorySaga(),\n    chapterSaga(),\n  ]);\n}\n","import React, { Component } from 'react';\nimport './CardDesigns.css';\nimport { connect } from 'react-redux';\n\nimport { Card, Button, Row, Col, Badge } from 'antd';\n\nclass ContributedListItem extends Component {\n\n    handleReadStory = (event) => {\n        this.props.history.push(`/existing-story/${this.props.story_id}`);\n    }\n    \n    handleLike = (event) => {\n        //This will compare the user_id of the person logged in\n        //to the id of the story creator and reject a like\n        //if they are the same, else the likes will increment\n        if (\n          this.props.user_id ==\n          this.props.story.contributedStoryReducer[0].author\n        ) {\n            return\n        } else {\n            this.props.dispatch({\n                type: \"LIKE_CONTRIBUTED_STORY\",\n                payload: {\n                    user_id: this.props.user_id,\n                    story_id: this.props.story_id\n                }\n            });\n        }\n    }\n\n    componentDidMount = (event) => {\n        this.props.dispatch({\n            type: 'GET_CONTRIBUTORS',\n            payload: this.props.story_id\n        })\n    }\n\n    render() {\n\n        return (\n            <div>\n                <Card\n                    id='card'\n                    bordered={true}\n                    style={{ width: 325 }}\n                    cover={<img className=\"story-photo\" alt=\"headshot of author\" src={this.props.header_photo} />}\n                    actions={[<Button icon=\"like\" onClick={this.handleLike} ><Badge count={this.props.likes} style={{ backgroundColor: '#fff', color: '#999', boxShadow: '0 0 0 1px #d9d9d9 inset' }}></Badge>\n                    </Button>, <Button onClick={this.handleReadStory}>Read</Button>]}\n                >\n                    <Row>\n                        <Col span={24}>\n                            <h1 id=\"story-title\">{this.props.title}</h1>\n                        </Col>\n                    </Row>\n                    <Row gutter={8}>\n                        <Col span={6}>\n                        </Col>\n                        <Col span={6}>\n                            <img id=\"author-avatar\" alt=\"author avatar\" src={this.props.profile_pic} />\n                        </Col>\n\n                        <Col span={6}>\n                            <h5 id=\"story-author\" align=\"left\">By {this.props.author}</h5>\n                        </Col>\n                        <Col span={6}>\n                        </Col>\n                    </Row>\n                </Card>\n                <br />\n                <br />\n            </div>\n        )\n    }\n};\n\nconst mapStateToProps = (reduxStore) => ({\n    story: reduxStore.story,\n    storyDetail: reduxStore.storyDetail,\n    contributors: reduxStore.story.contributors\n});\n\nexport default connect(mapStateToProps)(ContributedListItem);\n\n// export default ContributedListItem;\n","import React, { Component } from 'react';\nimport ContributedListItem from './ContributedListItem';\n\nimport propTypes from 'prop-types';\nimport { Carousel, Button } from 'antd';\nimport { connect } from 'react-redux';\n\nclass ContributedList extends Component {\n\n    componentDidMount = () => {\n        this.props.dispatch({ type: 'GET_MY_CONTRIBUTIONS' });\n    }\n\n    static propTypes = {\n        contributedStories: propTypes.array.isRequired,\n    };\n    handleStartStory = () => {\n        // console.log('in hSS');\n        this.props.history.push(`/choose-template`)\n    }\n\n    render() {\n        return (\n            //this component will render all of the stories a \n            //user has started or contributed to.\n            //If the user has not begun or contributed to a story,\n            //a button prompting the user to create a new one will render.\n            <div className='contributions'>\n                {this.props.contributedStories.length !== 0 ?\n                    (<div>\n                        {/* <h3 align='center'>My Stories and Contributions</h3> */}\n                        {/* this div contains the actual story blocks */}\n                        <Carousel swipeToSlide>\n                            {this.props.contributedStories.map((story, i) => {\n                                return <ContributedListItem\n                                    story={story}\n                                    user_id={this.props.userInfo.id}\n                                    history={this.props.history}\n                                    story_id={story.story_id}\n                                    key={i}\n                                    header_photo={story.header_photo}\n                                    title={story.title}\n                                    intro={story.intro}\n                                    //combining the DB columns into a props item 'author'\n                                    //for simplicity on the client\n                                    author={story.first_name + ' ' + story.last_name}\n                                    profile_pic={story.profile_pic}\n                                    likes={story.likes}\n                                />\n                            })}\n                        </Carousel>\n                    </div>) : (<div className='center-button'>\n                        {/* render this button if the user has no contributed stories */}\n                        <Button align='center' type='primary' onClick={this.handleStartStory}>Start A New Story!</Button>\n                    </div>)}\n            </div>\n\n        )\n    }\n};\n\nconst mapStateToProps = (state) => ({\n    story: state.story,\n    userInfo: state.user.userInfo,\n    contributedStories: state.story.contributedStoryReducer\n});\n\nexport default connect(mapStateToProps)(ContributedList);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './CardDesigns.css';\n\n//Ant design imports\nimport { Card, Button, Icon, Row, Col, Badge } from 'antd';\n\nclass TopStoryItem extends Component {\n\n    handleReadStory = (event) => {\n        console.log('in hRS', this.props);\n\n        this.props.history.push(`/existing-story/${this.props.story_id}`);\n    }\n\n  handleLike = (event) => {\n    //This will compare the user_id of the person logged in\n    //to the id of the story creator and reject a like\n    //if they are the same, else the likes will increment\n    if (\n      this.props.user_id ===\n      this.props.story.contributedStoryReducer[0].author\n    ) {\n      return\n    } else {\n      this.props.dispatch({\n        type: 'LIKE_TOP_STORY',\n        payload: {\n          user_id: this.props.user_id,\n          story_id: this.props.story_id\n        }\n      });\n    }\n  }\n\n    componentDidMount = (event) => {\n        this.props.dispatch({\n            type: 'GET_CONTRIBUTORS',\n            payload: this.props.story_id\n        })\n    }\n\n    render() {\n\n        return (\n          <div align=\"center\">\n            <Card\n              id=\"card\"\n              bordered={true}\n              style={{ width: 325 }}\n              cover={\n                <img\n                  className=\"story-photo\"\n                  alt=\"headshot of author\"\n                  src={this.props.header_photo}\n                />\n              }\n              actions={[\n                <Button icon=\"like\" onClick={this.handleLike}>\n                  <Badge\n                    count={this.props.likes}\n                    style={{\n                      backgroundColor: \"#fff\",\n                      color: \"#999\",\n                      boxShadow: \"0 0 0 1px #d9d9d9 inset\"\n                    }}\n                  />\n                </Button>,\n                <Button onClick={this.handleReadStory}>Read</Button>\n              ]}\n            >\n              <Row>\n                <Col span={24}>\n                  <h1 id=\"story-title\">{this.props.title}</h1>\n                </Col>\n              </Row>\n              <Row gutter={8}>\n                <Col span={6} />\n                <Col span={6}>\n                  <img\n                    id=\"author-avatar\"\n                    alt=\"author avatar\"\n                    src={this.props.profile_pic}\n                  />\n                </Col>\n\n                <Col span={6}>\n                  <h5 id=\"story-author\" align=\"left\">\n                    By {this.props.author}\n                  </h5>\n                </Col>\n                <Col span={6} />\n              </Row>\n            </Card>\n            <br />\n            <br />\n          </div>\n        );\n    }\n};\n\nconst mapStateToProps = (reduxStore) => ({\n    story: reduxStore.story,\n    storyDetail: reduxStore.storyDetail\n});\n\nexport default connect(mapStateToProps)(TopStoryItem);\n// export default TopStoryItem;\n","import React, { Component } from 'react';\nimport TopStoryItem from './TopStoryItem';\n\n// import Slider from 'react-slick';\nimport { Carousel } from 'antd';\nimport { connect } from 'react-redux';\n\nclass TopStoryList extends Component {\n\n    componentDidMount = () => {\n        this.props.dispatch({ type: 'GET_TOP_STORIES' });\n    }\n\n    render() {\n\n        return (\n            <div className='top-stories'>\n                {/* <h3 align='center'>Top Stories at Prime</h3> */}\n                {/* this div contains the individual top stories */}\n                <Carousel swipeToSlide>\n                    {this.props.topStories.map((story, i) => {\n                        return <TopStoryItem\n                            user_id={this.props.userInfo.id}\n                            story_id={story.story_id}\n                            history={this.props.history}\n                            key={i}\n                            header_photo={story.header_photo}\n                            title={story.title}\n                            intro={story.intro}\n                            author={story.first_name + ' ' + story.last_name}\n                            profile_pic={story.profile_pic}\n                            likes={story.likes} />\n\n                    })}\n                </Carousel>\n            </div>\n        )\n    }\n};\n\nconst mapStateToProps = (state) => ({\n    userInfo: state.user.userInfo,\n    topStories: state.story.topStoriesReducer\n});\n\nexport default connect(mapStateToProps)(TopStoryList);","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Row, Typography } from 'antd';\nimport './SubHeader.css';\n\nconst { Title } = Typography;\n\nexport default class SubHeader extends Component {\n    \n    static propTypes = {\n        headerText: PropTypes.string.isRequired,\n    }\n    render() {\n        return (\n            <Row type=\"flex\"\n                 justify=\"space-around\"\n                 align=\"middle\"\n                 gutter={16}\n                 className='sub-header'>\n                <Title \n                    level={3} \n                    className='sub-header-text'>\n                    {this.props.headerText}\n                </Title>\n            </Row>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n//Ant design\nimport { Divider, notification } from 'antd';\n\nimport ContributedList from './ContributedList';\nimport TopStoryList from './TopStoryList';\nimport SubHeader from '../Common/SubHeader';\n\nimport './CardDesigns.css';\n\nclass HomePage extends Component {\n    componentDidMount() {\n        if (this.props.invite.length > 0) {\n            notification.open({\n                message: `Welcome, ${this.props.user.first_name}`,\n                description: `You have ${this.props.invite.length} notifications`,\n                duration: 0,\n                onClick: () => {\n                    // console.log('Notification Clicked!');\n                    this.props.history.push('/notification');\n                },\n            });\n        }\n    };\n\n    render() {\n        return (\n            <div align=\"center\">\n            <SubHeader headerText='Home'/>\n                <Divider>My Stories and Contributions</Divider>\n                <ContributedList\n                    history={this.props.history}\n                />\n                <Divider>Top Stories at Prime</Divider>\n                <TopStoryList\n                    history={this.props.history}\n                />\n            </div>\n        )\n    }\n};\n\nconst mapStateToProps = (reduxStore) => ({\n    invite: reduxStore.notification.invite,\n    user: reduxStore.user.userInfo,\n});\n\nexport default connect(mapStateToProps)(HomePage);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './Notification.css'\n\nimport { List, Avatar, Button } from 'antd';\n\n\nclass InviteList extends Component {\n    buildListItems = (item) => {\n        return <List.Item>\n            <List.Item.Meta\n                avatar={<Avatar src=\"https://zos.alipayobjects.com/rmsportal/ODTLcjxAfvqbxHnVXCYX.png\" />}\n                title={<a href=\"https://ant.design\">title</a>}\n                description={item.status}\n            />\n        </List.Item>\n    }\n\n    handleInvite = (invite, status, event) => {\n        console.log('error error')\n        this.props.dispatch({\n            type: `SEND_INVITE_RESPONSE`,\n            payload: { invite_id: invite.invite_id, status: status }\n        })\n        if (status === 'accepted') {\n            this.props.history.push(`/existing-story/${invite.story_id}`);\n        }\n    }\n\n\n\n    render() {\n        const { invite } = this.props;\n        return (\n\n            <List\n                className=\"notification-item\"\n                itemLayout=\"horizontal\"\n                dataSource={invite}\n                renderItem={invite => (\n                    <List.Item actions={[\n                        <Button size=\"small\" id=\"notification-btn\" onClick={this.handleInvite.bind(this, invite, 'accepted')}>Accept</Button>,\n                        <Button size=\"small\" id=\"notification-btn\" onClick={this.handleInvite.bind(this, invite, 'rejected')}>Maybe Later</Button>,\n                    ]}>\n                        <List.Item.Meta\n                            avatar={<Avatar src={invite.profile_pic} />}\n                            description={`${invite.first_name} ${invite.last_name} invited you to contribute to: \"${invite.title}\"`}\n                        />\n                    </List.Item>\n                )}\n\n            />\n\n        )\n    }\n};\n\n\nexport default connect()(InviteList);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport SubHeader from '../Common/SubHeader';\nimport InviteList from './InviteList';\nimport { Divider } from 'antd';\n\nclass Notification extends Component {\n\n    componentDidMount() {\n        this.props.dispatch({ type: 'GET_INVITES' })\n    }\n\n    render() {\n        const { invite } = this.props\n        return (\n            <div>\n                {/* <div>\n                <br/>\n                <h1 align='center'>Notifications</h1>\n                {invite.length > 0 ? \n                (<InviteList invite={invite}/>)\n                :\n                (<Divider>You have no invites at this time.</Divider>)}\n            </div> */}\n                <div className=\"list\"\n                    align=\"center\">\n                    <SubHeader headerText='Notifications' />\n                    {/* <h1>Notifications</h1> */}\n                    {invite.length > 0 ?\n                        <InviteList\n                            story_id={invite.story_id}\n                            history={this.props.history}\n                            invite={invite}\n                        />\n                        :\n                        <Divider>You have no invites at this time</Divider>\n\n                    }\n\n                </div>\n            </div>\n        )\n    }\n};\n\nconst mapRStoProps = (rs) => {\n    return { invite: rs.notification.invite }\n}\n\nexport default connect(mapRStoProps)(Notification);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Card, Icon, Button, Spin } from 'antd';\nimport './ProfilePage.css';\n\nconst antIcon = <Icon type=\"loading\" style={{ fontSize: 24 }} spin />;\n\nclass ContributedStoryListItem extends Component {\n\n    handleLike = (event) => {\n        this.props.dispatch({\n            type: 'LIKE_CONTRIBUTED_STORY',\n            payload: {\n                user_id: this.props.user_id,\n                story_id: this.props.story_id\n            }\n        });\n    }\n\n    handleReadStory = (event) => {\n        this.props.history.push(`/existing-story/${this.props.story_id}`);\n    }\n\n    componentDidMount = () => {\n        this.handleDispatch();\n    }\n\n    handleDispatch = () => {\n        this.props.dispatch({\n            type: 'GET_STORY_LIKES',\n            payload: this.props.story.contributedStoryReducer[0].story_id\n        })\n    }\n\n    handleLike = (event) => {\n        this.props.dispatch({\n            type: 'LIKE_CONTRIBUTED_STORY',\n            payload: {\n                user_id: this.props.user_id,\n                story_id: this.props.story.contributedStoryReducer[0].story_id\n            }\n        });\n    }\n\n    render() {\n\n        return (\n            <div className=\"card-div\">\n                {/* {this.props.storyDetail.likes.length !== 0 ? */}\n                    <Card\n                        className=\"profile-story-cards\"\n                        style={{ width: 325 }}\n                        cover={<img className=\"story-photo\" src={this.props.header_photo} alt=\"story\" />}\n                        actions={[<Button id=\"like-btn\" onClick={this.handleLike}><Icon type='like' />Like</Button>,\n                        <Button id=\"like-btn\" onClick={this.handleReadStory}>Review</Button>\n                        ]}\n                    >\n\n                        <h3 className=\"story-title\" onClick={this.handleReadStory} level={4} >{this.props.title}</h3>\n                        <p>{this.props.likes} Likes</p>\n\n                    </Card> \n                    {/* // : (<Spin indicator={antIcon} />)} */}\n            </div>\n        )\n    }\n};\n\nconst mapStateToProps = (reduxStore) => ({\n    story: reduxStore.story,\n    storyDetail: reduxStore.storyDetail\n});\n\nexport default connect(mapStateToProps)(ContributedStoryListItem);","import React, { Component } from 'react';\nimport ContributedStoryListItem from './ContributedStoryListItem';\n\n\nimport { connect } from 'react-redux';\n\n//this file is being used on the profile page to render\n//all of the stories that a user has BEGUN\nclass ContributedStoryList extends Component {\n\n    componentDidMount = () => {\n        //the first dispatch gets the stories user is contributing to and renders them on\n        //the profile page\n        this.props.dispatch({ type: 'GET_MY_CONTRIBUTIONS' });\n    }\n\n    render() {\n\n\n        return (\n            <div className='contributions'>\n                <div>\n                    {/* {JSON.stringify(this.props.storyDetail.likes)} */}\n\n                    {this.props.story.contributedStoryReducer.map((story, i) => {\n                        return <ContributedStoryListItem\n                            user_id={this.props.userInfo.id}\n                            key={i}\n                            history={this.props.history}\n                            story_id={story.story_id}\n                            header_photo={story.header_photo}\n                            title={story.title}\n                            intro={story.intro}\n                            //just combining the DB columns into a props item 'author'\n                            //for simplicity on the client\n                            author={story.first_name + ' ' + story.last_name}\n                            profile_pic={story.profile_pic}\n                            likes={story.likes}\n                        />\n                    })}\n\n                </div>\n            </div>\n\n        )\n    }\n};\n\nconst mapStoreToProps = (reduxStore) => ({\n    userInfo: reduxStore.user.userInfo,\n    story: reduxStore.story,\n    storyDetail: reduxStore.storyDetail.likes,\n    contributedStories: reduxStore.story.contributedStoryReducer,\n\n});\n\nexport default connect(mapStoreToProps)(ContributedStoryList);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Row, Col, Icon, Typography, Divider, Button, Input, Modal } from 'antd';\n\nimport './ProfilePage.css';\nimport 'antd/dist/antd.css';\nimport moment from 'moment';\n\nimport ContributedStoryList from './ContributedStoryList';\n\nconst { Title } = Typography;\nconst { Text } = Typography;\nconst { TextArea } = Input;\n\n// this component displays the user's profile information and stories\nclass ProfilePage extends Component {\n    state =\n        {\n            isHidden: true,\n            id: this.props.user.userInfo.id,\n            first_name: this.props.user.userInfo.first_name,\n            last_name: this.props.user.userInfo.last_name,\n            bio: this.props.user.userInfo.bio,\n            visible: false,\n            file: null\n        };\n\n    componentDidMount = () => {\n        //the first dispatch gets the stories user is contributing to and renders them on\n        //the profile page\n        this.props.dispatch({ type: 'GET_CONTRIBUTION_COUNT' });\n        this.props.dispatch({ type: 'GET_STORY_COUNT' });\n    }\n    // functions for image upload   \n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    }\n    handleOk = (e) => {\n        console.log(e);\n        this.submitFile();\n        this.setState({\n            visible: false,\n        });\n    }\n    handleCancel = (e) => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    }\n    submitFile = (event) => {\n        // console.log('in sF');\n\n        // event.preventDefault();\n        const formData = new FormData();\n        formData.append('file', this.state.file);\n        const action = {\n            type: 'ADD_IMAGE_AWS',  //directs dispach on which saga to use based on props\n            nextType: `ADD_IMAGE_${'PERSON'}`,\n            payload: formData,\n            id: this.props.user.userInfo.id\n        }\n        this.props.dispatch(action);\n        // console.log(this.props.photoDetails.typeOfPhoto);\n    }\n    appendPic = () => {\n        let statePic = this.state.file\n        let picURL = URL.createObjectURL(statePic)\n        return <img height='150' src={picURL} alt=\"thumbnail chosen\" />\n    }\n    handleFileUpload = (event) => {\n        this.setState({\n            file: event.target.files[0]\n        })\n    }\n    // functions for editing input fields\n    onEditBtnClick() {\n        this.setState(state => ({\n            isHidden: !state.isHidden\n        }));\n    }\n    handleChange = propertyName => event => {\n        this.setState({ [propertyName]: event.target.value });\n    }\n    submitEditedName() {\n        const editedName = { id: this.state.id, first_name: this.state.first_name, last_name: this.state.last_name, bio: this.state.bio }\n        console.log(editedName);\n        this.props.dispatch({ type: 'EDIT_PROFILE', payload: editedName });\n        this.setState(state => ({\n            isHidden: !state.isHidden\n        }));\n    }\n    testThings = () => {\n        console.log(this.props.reduxStore.user);\n    }\n\n\n    render() {\n        console.log(this.props.story);\n        \n        return (\n\n            <div className=\"container\" >\n                <div className=\"profile-header\">\n                    <Row gutter={16}>\n                        {/* {JSON.stringify(this.props.user.userInfo)} */}\n                        <Col xs={6}><img onClick={this.showModal} className=\"contain\" src={this.props.user.userInfo.profile_pic} alt=\"profile-pic\" /></Col>\n\n                        {this.state.isHidden ? this.renderStaticName() : this.renderEditName()}\n\n                    </Row>\n                    <Divider />\n                    <Row gutter={16}>\n                        <Col xs={24}></Col>\n                    </Row>\n                    <div className=\"stats-div\">\n                        <Row gutter={16}>\n                            <Col xs={24}>\n                                <Icon className=\"profile-element\" type=\"calendar\" style={{ fontSize: \"14px\" }} />\n                                <Text className=\"stats-text\">Member since&nbsp;{moment(this.props.user.userInfo.date_created).format(\"MMM Do, YYYY\")}</Text>\n                            </Col>\n                        </Row>\n                        <Row gutter={16}>\n                            <Col xs={24}>\n                                <Icon className=\"profile-element\" type=\"book\" style={{ fontSize: \"14px\" }} />\n                                <Text className=\"stats-text\">{this.props.story.userStoryCountReducer}&nbsp;Stories</Text>\n                            </Col>\n                        </Row>\n                        <Row gutter={16}>\n                            <Col xs={24}>\n                                <Icon className=\"profile-element\" type=\"profile\" style={{ fontSize: \"14px\" }} />\n                                <Text className=\"stats-text\">{this.props.story.userContributionCountReducer}&nbsp;Contributions</Text>\n                            </Col>\n                        </Row>\n                    </div>\n                    <Divider />\n\n                </div>\n                <div align=\"center\">\n                    <Row gutter={8}>\n                        <Col xs={24}>\n                            <Title level={4}>Stories</Title>\n                        </Col>\n                    </Row>\n                    <Row gutter={16}>\n                        <Col xs={24}>{this.props.story ?\n                            (<ContributedStoryList history={this.props.history} />) : (<p>loading...</p>)}</Col>\n                    </Row>\n                </div>\n\n                {/* this code is for the conditionally rendered modal, which only\n                appears when the profile picture is clicked on */}\n                <div>\n                    <Modal\n                        visible={this.state.visible}\n                        onOk={this.handleOk}\n                        onCancel={this.handleCancel}\n                    >\n                        <Row type=\"flex\" justify=\"center\">\n                            <div>Choose Photo From Library:</div>\n                            <input type=\"file\" accept=\"image/*\" onChange={this.handleFileUpload}></input>\n                            {this.state.file !== null && this.appendPic()}\n                        </Row>\n                    </Modal>\n                </div>\n            </div >\n\n        )\n    }\n    // conditionally rendered fields, rendered according to whether or not the edit button has been clicked\n    // edit field to change user's first and last name; static text transforms into two text fields\n    renderEditName() {\n        return (\n            <Col xs={12}>\n                <Input className=\"edit-input\" size=\"small\" onChange={this.handleChange('first_name')} placeholder='first name' />\n                <Input className=\"edit-input\" size=\"small\" onChange={this.handleChange('last_name')} placeholder='last name' />\n                <TextArea className=\"edit-input\" onChange={this.handleChange('bio')} placeholder=\"enter a short bio\" />\n                <Button className=\"edit-element\" id=\"edit-btn\" onClick={this.onEditBtnClick.bind(this)}>Cancel</Button>\n                <Button className=\"edit-element\" id=\"edit-btn\" onClick={this.submitEditedName.bind(this)}>Save</Button>\n            </Col>\n        )\n    }\n    // field that displays first, last name, and bio\n    renderStaticName() {\n        return (\n            <div>\n                <Col xs={16}>\n                    <Text id=\"user-name\" level={4}>{this.props.user.userInfo.first_name}&nbsp;{this.props.user.userInfo.last_name}</Text>\n                </Col>\n                <Row gutter={16}>\n                    <Col xs={8}></Col>\n                    <Col xs={16}>\n                        <Text className=\"text\">{this.props.user.userInfo.bio}</Text>\n                    </Col>\n                </Row>\n                <Row gutter={16}>\n                    <Col xs={6}></Col>\n                    <Col xs={18}><Button size=\"small\" className=\"edit-element\" id=\"edit-btn\" onClick={this.onEditBtnClick.bind(this)}>Edit Profile</Button>\n                    </Col>\n                </Row>\n\n            </div>\n\n\n        )\n    }\n\n\n}\n\n\nconst mapStoreToProps = reduxStore => ({\n    user: reduxStore.user,\n    story: reduxStore.story,\n});\n\nexport default connect(mapStoreToProps)(ProfilePage);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Input, Select} from 'antd';\n\nimport './SearchBar.css'\n\nclass SearchBar extends Component {\n    state = {\n        dropdown: \"AUTHOR\",\n    }\n    handleChange = (value) => {\n        this.setState({\n            dropdown: `${value}`\n        })\n    }\n    sendSearch = (event) => {\n        const action = {\n            type: `GET_SEARCH_STORIES_${this.state.dropdown}`,\n            payload: event.toLowerCase()  //to make searching less specific\n        };\n        this.props.dispatch(action);\n    }\n    render() {\n        const Search = Input.Search;\n        const Option = Select.Option;\n        const selectBefore = (\n            <Select defaultValue=\"Author\" onChange={this.handleChange} style={{ width: 115 }} justify=\"center\">\n                <Option value=\"AUTHOR\" >Author</Option>\n                <Option value=\"TITLE\">Title</Option>\n                <Option value=\"DESCRIPTION\">Description</Option>\n            </Select>\n        );\n        return (\n            <div className='box'>\n                <Search\n                    addonBefore={selectBefore}\n                    placeholder=\"Search\"\n                    onSearch={value => this.sendSearch(value)}\n                    style={{ width: '100%' }}\n                />\n            </div>\n        )\n    }\n};\n\nexport default connect()(SearchBar);","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { withRouter, Link } from \"react-router-dom\";\n\nimport { List, Avatar, Row, Col, Typography, Divider } from 'antd';\n\nimport './SearchBar.css';\n\nclass ResultListItem extends Component {\n  state = {\n    photoFlipped: false,\n  }\n  static propTypes = {\n    match: PropTypes.object.isRequired,\n    location: PropTypes.object.isRequired,\n    history: PropTypes.object.isRequired\n  };\n\n  handleClick = () => {\n    this.props.history.push(`/existing-story/${this.props.item.story_id}`);\n  }\n  handleDescription = () => {\n    if (this.props.item.intro.length < 100) {\n      return this.props.item.intro.substring(0, 100)\n    } else if (this.props.item.intro.length) {\n      return `${this.props.item.intro.substring(0, 100)}...`\n    }\n  }\n\n  flipPhoto = () => {\n    this.setState({ photoFlipped: !this.state.photoFlipped })\n  }\n\n  render() {\n    const { title, header_photo, intro, caption, full_name, profile_pic, story_id } = this.props.item;\n\n    // console.log(item.intro.substring(0, 40));\n    return (\n      <Row type='flex' justify='center'>\n        <Col span={18}>\n          <List.Item\n            key={title}\n            // card photo can be flipped to show caption or photo\n            extra={\n              this.state.photoFlipped ?\n                <div\n                  style={{ width: 272, height: 204, borderStyle: 'solid'  }}\n                  onClick={this.flipPhoto}>\n                  <Typography style={{ textAlign: 'center', paddingTop: 20}}>\n                    {caption}\n                  </Typography>\n                </div>\n                :\n                <img\n                  alt=\"logo\"\n                  src={header_photo}\n                  onClick={this.flipPhoto}\n                  style={{ objectFit: 'contain', width: 272 }} />}\n          >\n            {/* these are the contents of the list item */}\n            <Row type='flex' align='middle' justify='center'>\n              <Col span={24}>\n                <Typography.Title level={4} style={{ textDecoration: 'none', textAlign: 'center' }}>\n                  <Link to={`/existing-story/${story_id}`} >{title}</Link>\n                </Typography.Title>\n              </Col>\n              \n              <Col span={24}>\n                <Row type='flex' align='middle' justify='center' style={{ marginBottom: 20 }}>\n                  <Col span={8}>\n                    <Avatar size={64} src={profile_pic} />\n                  </Col>\n                  <Col span={12}>\n                    <Typography>\n                      {`By ${full_name}`}\n                    </Typography>\n                  </Col>\n                </Row>\n              </Col>\n\n\n\n              {intro.length > 80 &&\n                <Col span={20}>\n                  <Typography.Paragraph>\n                    {`${intro.substring(0, 80)}...`}\n                  </Typography.Paragraph>\n                </Col>\n              }\n            </Row>\n          </List.Item>\n\n        </Col>\n        <Divider></Divider>\n      </Row>\n\n\n      // <Row type=\"flex\" align=\"middle\" className='search-story'>\n      //   <Col span={12}>            \n      //   <List.Item>\n      //     <List.Item.Meta\n      //       title={item.title}\n      //       description={this.handleDescription()}\n      //       align=\"top\"\n\n      //     />\n      //     {item.content}\n      //     </List.Item> {/*end first item */}\n      //     <List.Item\n      //       key={item.title}\n      //       actions={<Icon type=\"like\" text=\"156\" />}\n      //     >\n      //       <List.Item.Meta\n      //       className=\"list-content\"\n      //         avatar={<Avatar src={item.profile_pic} />}\n      //         description={item.full_name}\n      //       />\n      //     </List.Item>\n      //   </Col>\n      //   <Col span={12}>\n      //     <Card\n      //       onClick={this.handleClick}\n      //       hoverable\n      //       style={{ width: 200 }}\n      //       cover={<img alt=\"example\" src={item.header_photo} />}\n      //     >\n      //       <Meta\n      //         description={item.caption}\n      //       />\n      //     </Card>\n      //   </Col>\n      // </Row>\n    )\n  }\n}\n\nexport default withRouter(ResultListItem);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { List, Typography } from 'antd';\nimport ResultListItem from './ResultListItem';\n\n\nclass SearchResult extends Component {\n    render() {\n        const { searchResults } = this.props;\n\n        return (\n            <div>\n                {searchResults.length > 0 ?\n                <div>\n                    <List\n                        itemLayout=\"vertical\"\n                        size=\"large\"\n                        pagination={{\n                            onChange: (page) => {\n                                console.log(page);\n                            },\n                            pageSize: 2,\n                            hideOnSinglePage: true,\n                            style: {marginTop: 0, marginBottom: 20}\n                        }}\n                        dataSource={searchResults}\n                        renderItem={item => (\n                            <ResultListItem item={item} />\n                        )}\n                    />\n                </div>\n                :\n                <div>\n                    <Typography align='center'>\n                        Your search results will appear here.\n                    </Typography>\n                </div>\n                }\n\n            </div>\n        )\n    }\n};\n\nconst mapStateToProps = (rs) => ({\n    searchResults: rs.searchResults,\n});\n\nexport default connect(mapStateToProps)(SearchResult);","import React, { Component } from 'react';\n\nimport SearchBar from './SearchBar';\nimport SearchResults from './SearchResult';\nimport SubHeader from '../Common/SubHeader';\nimport { Col, Row } from 'antd';\n\nexport default class SearchMain extends Component {\n  render() {\n    return (\n      <div>\n        <Row type=\"flex\" justify=\"center\">\n          <Col span={24}>\n            <SubHeader headerText='Browse Stories' />\n          </Col>\n          <Col span={18}>\n            <SearchBar />\n          </Col>\n          <Col span={24}>\n            <SearchResults />\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { Modal, Button, Row, Avatar, Input, Col } from 'antd';\n\nimport './ImageUpload.css';\n\nclass ImageUpload extends Component {\n    state = {\n        visible: false,\n        file: null,\n        confirmLoading: false,\n    }\n\n    //photo details contains title for button name and typeOfPhoto keywords for next saga\n    static propTypes = {\n        photoDetails: PropTypes.object.isRequired,\n        editMode: PropTypes.bool,\n    }\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    }\n\n    handleOk = (e) => {\n        console.log(e);\n        this.submitFile();\n        this.setState({\n            confirmLoading: true,\n        });\n        setTimeout(() => {\n            this.setState({\n                visible: false,\n                file: null,\n                confirmLoading: false,\n            });\n        }, 2000);\n    }\n\n    handleCancel = (e) => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    }\n    submitFile = (event) => {\n        // console.log('in sF');\n        // event.preventDefault();\n        const formData = new FormData();\n        formData.append('file', this.state.file);\n        const action = {\n            type: 'ADD_IMAGE_AWS',  //directs dispach on which saga to use based on props\n            nextType: `ADD_IMAGE_${this.props.photoDetails.typeOfPhoto}`,\n            payload: formData,\n            id: this.props.user.userInfo.id,\n            chapterId: this.props.photoDetails.chapterId,\n            storyId: this.props.photoDetails.storyId,\n        }\n        this.props.dispatch(action);\n        // console.log(this.props.photoDetails.typeOfPhoto);\n    }\n\n    handleFileUpload = (event) => {\n        this.setState({\n            file: event.target.files[0]\n        })\n    }\n\n    render() {\n        const { buttonName, title } = this.props.photoDetails;\n        const { visible, confirmLoading, file } = this.state;\n        // determines button class based on whether its used on for story editing\n        let buttonClass;\n        if (this.props.editMode) {\n            buttonClass = 'edit-button';\n        }\n        let thumbnailSrc = file;\n        if (this.state.file !== null) {\n            thumbnailSrc = URL.createObjectURL(file);\n        }\n        return (\n            <div>\n                   <Button \n                    type=\"default\" \n                    onClick={this.showModal} \n                    className={buttonClass}\n                    style={{width: '100%'}}>\n                    {buttonName}\n                </Button> \n                <Modal\n                    title={title}\n                    style={{ top: 20 }}\n                    visible={visible}\n                    onOk={this.handleOk}\n                    okText='Save Photo'\n                    onCancel={this.handleCancel}\n                    confirmLoading={confirmLoading}\n                >\n                    {/* <div>Take A Photo: <input label='upload file' type='file' accept=\"image/*\" capture=\"camera\" onChange={this.handleFileUpload} /></div> This is being commented out for the sake of the presentation since it is useless on browser */}\n                    {/* <h2>OR</h2> */}\n                    <Row type=\"flex\" justify=\"center\">\n                        <Col>\n                            <Input type=\"file\" accept=\"image/*\" onChange={this.handleFileUpload} />\n                        </Col>\n                        <Col style={{marginTop: 10}}>\n                            <Avatar shape=\"square\" size={100} icon=\"picture\" src={thumbnailSrc} />\n                        </Col>\n                    </Row>\n                </Modal>\n\n            </div>\n        );\n    }\n}\nconst mapStoreToProps = reduxStore => ({\n    user: reduxStore.user,\n})\nexport default connect(mapStoreToProps)(ImageUpload)","import React, { Component } from 'react';\nimport PropTypes from \"prop-types\";\nimport { connect } from 'react-redux';\n\nimport { Modal, Button, Input } from 'antd';\n\nclass EditButton extends Component {\n    state = {\n        modalVisible: false,\n        editedValue: null,\n    }\n\n    static propTypes = {\n        valueToEdit: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        type: PropTypes.string.isRequired,\n        id: PropTypes.number.isRequired,\n    }\n\n    handleModalBtn = (value, e) => {\n        this.setState({ modalVisible: value, })\n    }\n\n    handleEdit = (e) => {\n        // console.log(e)\n        this.setState({ editedValue: e.target.value })\n    }\n\n    handleSubmit = () => {\n        // console.log('in submit');\n        const { editedValue } = this.state;\n        let { name, id, type } = this.props;\n        if (editedValue !== null) {\n            switch (type) {\n                case ('Chapter'):\n                    this.props.dispatch({\n                        type: 'EDIT_CHAPTER',\n                        payload: {\n                            id: id,\n                            colName: name,\n                            updatedValue: editedValue,\n                        }\n                    });\n                    break;\n                case ('Story'):\n                    this.props.dispatch({\n                        type: 'EDIT_STORY',\n                        payload: {\n                            id: id,\n                            colName: name,\n                            updatedValue: editedValue,\n                        }\n                    });\n                    break;\n                default:\n                    break;\n            }\n        }\n        return this.setState({modalVisible: false})\n    }\n\n    render() {\n        // console.log(this.props);\n        const { editedValue } = this.state;\n        const { valueToEdit, name, type } = this.props;\n        return (\n            <div>\n                <Button\n                    type=\"default\"\n                    icon='edit'\n                    onClick={this.handleModalBtn.bind(this, true)}\n                    className='edit-button'>\n                    {`${name}`}</Button>\n                <Modal\n                    title={`Editing ${type} ${name}`}\n                    style={{ top: 20 }}\n                    visible={this.state.modalVisible}\n                    onOk={this.handleSubmit}\n                    okText='Save Edit'\n                    onCancel={() => this.handleModalBtn(false)}\n                >\n                    <Input.TextArea value={editedValue === null ? valueToEdit : editedValue} onChange={this.handleEdit} style={{minHeight: 100}}/>\n                </Modal>\n            </div>\n        )\n    }\n}\n\nexport default connect()(EditButton);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Button, Row, Col, Modal } from 'antd';\n\nconst confirm = Modal.confirm;\n\nclass FinalizeStoryButton extends Component {\n\n    handlePostStory = () => {\n        console.log('post story clicked');\n        //confirm finishing story with modal\n        \n        //onOk function does not have access to component scope so pulling these off props now\n        const { dispatch, summary } = this.props;\n        confirm({\n            title: 'Are you done editing and ready to complete this story?',\n            content: `Please review the story summary, chapter contents, and photos before completing the story.`,\n            okText: 'Complete Story',\n            okType: 'danger',\n            okButtonProps: {\n                type: 'danger',\n            },\n            cancelText: 'Keep Editing',\n            onOk() {\n                dispatch({\n                    type: 'COMPLETE_STORY',\n                    payload: summary.id\n                })\n            },\n            onCancel() {\n                console.log('Cancel');\n            },\n        });\n\n\n    }\n\n    render() {\n        const { user, summary } = this.props;\n        return (\n            <div>\n                {/* only shows button if user is author and story has not already been completed */}\n                {user.id === summary.author_id && summary.completed === false &&\n                    <Row type='flex' justify='center'>\n                        <Col span={18}>\n                            <Button\n                                type=\"primary\"\n                                onClick={this.handlePostStory}\n                                style={{ width: '100%', margin: '20px 0' }}>\n                                Finalize Story</Button>\n                        </Col>\n                    </Row>\n                }\n            </div>\n        )\n    }\n}\n\nconst mapRStoProps = (rs) => {\n    return {\n        user: rs.user.userInfo,\n        summary: rs.storyDetail.summary[0]\n    }\n}\n\nexport default connect(mapRStoProps)(FinalizeStoryButton);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router\";\n\nimport ImageUpload from './../../../ImageUpload/ImageUpload.js';\nimport EditButton from '../EditButton';\nimport FinalizeStoryButton from '../FinalizeStoryButton';\nimport SubHeader from '../../../Common/SubHeader';\n\nimport { PageHeader, Pagination, Card, Row, Col, Button } from 'antd';\n\nclass ChapterView extends Component {\n    static propTypes = {\n        match: PropTypes.object.isRequired,\n        location: PropTypes.object.isRequired,\n        history: PropTypes.object.isRequired,\n        contributor: PropTypes.array.isRequired,\n        editMode: PropTypes.bool.isRequired,\n    };\n\n    turnPage = (page, pageSize) => {\n        this.props.history.push(`${page - 1}`)\n    }\n\n    handleReturn = () => {\n        this.props.history.push(`/existing-story/${this.props.summary[0].id}`)\n    }\n\n    render() {\n        //took out likes for now\n        const { summary, chapter, contributor, editMode } = this.props;\n        const { chapterId } = this.props.match.params;\n        console.log(chapterId, chapter);\n\n        // console.log('editMode:', this.state.editMode);\n        const contributorSum = contributor.length;\n        let contributorDescription = '';\n        if (contributorSum === 0) {\n            contributorDescription = '';\n        } else if (contributorSum === 1) {\n            contributorDescription = ' and one contributor';\n        } else if (contributorSum < 2) {\n            contributorDescription = ` and ${contributorSum} contributors`;\n        }\n        const currChapter = chapter[chapterId];\n        console.log('currChapter', currChapter);\n\n        return (\n            <div>\n                <Row type=\"flex\" justify=\"space-around\" align=\"middle\">\n                    <Col span={24}>\n                        <SubHeader headerText='Chapter Details' />\n                    </Col>\n                </Row>\n                {currChapter !== undefined && summary.length > 0 ?\n                    <div>\n                        <Row type='flex' justify=\"space-around\" align=\"middle\">\n                            <PageHeader\n                                title={`Chapter ${currChapter.order}: ${currChapter.title}`}\n                                subTitle={`in story \"${summary[0].title}\" by ${summary[0].author_name}${contributorDescription}. `}\n                            />\n                            {editMode &&\n                                <Col style={{ marginBottom: 20 }}>\n                                    <EditButton\n                                        valueToEdit={currChapter.title}\n                                        type='Chapter'\n                                        name='Title'\n                                        id={currChapter.id} />\n                                </Col>\n                            }\n                        </Row>\n                        <Card\n                            style={{ width: 300, display: 'block', margin: 'auto', marginBottom: 10, }}\n                            cover={<img alt={`Chapter ${chapterId} header`} src={currChapter.chapter_photo} />}>\n                            <Card.Meta\n                                description={currChapter.text}\n                            />\n                        </Card>\n\n                        {editMode &&\n                            <Row type='flex' justify='space-around' style={{marginBottom: 20}}>\n                                <Col>\n                                    <EditButton valueToEdit={currChapter.text}\n                                        type='Chapter'\n                                        name='Text'\n                                        id={currChapter.id} />\n                                </Col>\n                                <Col>\n                                    <ImageUpload\n                                        photoDetails={{\n                                            typeOfPhoto: 'CHAPTER',\n                                            title: `Changing Chapter ${currChapter.order} Photo`,\n                                            chapterId: currChapter.id,\n                                            buttonName: \"Change Photo\"\n                                        }}\n                                        editMode={editMode} />\n                                </Col>\n                            </Row>\n                        }\n                        \n                        <Row type=\"flex\" justify=\"center\" align=\"middle\">\n                            <Pagination\n                            defaultCurrent={currChapter.order}\n                            pageSize={1}\n                            total={Number(chapter.length)}\n                            onChange={this.turnPage}\n                            hideOnSinglePage={true} />\n\n                            <Col span={18}>\n                                <Button \n                                    onClick={this.handleReturn}\n                                    style={{marginTop: 10, marginBottom: 10, display: 'block', width: '100%'}}>\n                                    Return To Summary\n                                </Button>\n                            </Col>\n                        </Row>\n                        <FinalizeStoryButton />\n                    </div>\n                    :\n                    <p> Page is loading.</p>\n                }\n\n\n\n            </div>\n        )\n    }\n};\n\nconst ChapterViewWithRouter = withRouter(ChapterView);\n\nexport default connect()(ChapterViewWithRouter);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { AutoComplete } from 'antd';\n\nimport { Alert, Input, Icon } from 'antd';\n\nconst Option = AutoComplete.Option;\n\nclass ContributorForm extends Component {\n  state = {\n    person: {},\n    alert: false,\n  }\n\n  handleSearch = (value) => {\n    if (value.length > 1) {\n      this.props.dispatch({\n        type: 'GET_EMPLOYEES',\n        payload: value,\n      })\n    }\n  }\n\n  onChange = (value) => {\n    this.setState({\n      person: this.props.employeeResults[value]\n    })\n  }\n\n  handleClick = () => {\n    const repeat = this.props.pendingContributors.filter((c) => { return c.person_id === this.state.person.person_id });\n    if (this.state.person.first_name === undefined) {\n      return null;\n    } else if (repeat.length > 0) {\n      this.setState({ alert: true, });\n      setTimeout(() => { this.setState({ alert: false, }) }, 2000);\n    } else {\n      this.props.dispatch({\n        type: 'ADD_PENDING_CONTRIBUTORS',\n        payload: this.state.person\n      })\n      this.props.dispatch({ type: 'CLEAR_EMPLOYEE_RESULTS' })\n    }\n  }\n\n  render() {\n    const searchResults = this.props.employeeResults.map(\n      (employeeObj, i) => {\n        return (\n          <Option key={i} >\n            {`${employeeObj.first_name} ${employeeObj.last_name}`}\n          </Option>);\n      });\n    return (\n      <div>\n        {this.state.alert ?\n          <div>\n            <Alert message={\n              `User is already a contributor`}\n              type=\"warning\"\n              showIcon />\n          </div>\n          :\n          null\n        }\n        <AutoComplete\n          style={{ width: \"100%\" }}\n          onSearch={this.handleSearch}\n          onChange={this.onChange}\n          defaultValue=''\n          placeholder=\"begin typing name\"\n          dataSource={searchResults}>\n          <Input\n            addonAfter={(\n              <Icon type=\"user-add\" onClick={this.handleClick} />\n            )}\n          />\n        </AutoComplete>\n      </div>\n    );\n  }\n}\n\nconst mapRStoProps = (rs) => {\n  return {\n    employeeResults: rs.contributor.employeeResults,\n    pendingContributors: rs.contributor.pending\n  }\n}\n\nexport default connect(mapRStoProps)(ContributorForm);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Avatar, List } from 'antd';\n\nclass ContributorItem extends Component {\n\n    handleClick = () => {\n        this.props.dispatch({\n            type: 'REMOVE_PENDING_CONTRIBUTOR',\n            payload: this.props.item,\n        })\n    }\n\n    render() {\n        const { item, editMode } = this.props;\n        \n        // only lets editors remove contributors\n        let itemClick;\n        if(editMode) {\n            itemClick = this.handleClick;\n        }\n        return (\n            <List.Item onClick={itemClick}>\n                <List.Item.Meta\n                    avatar={<Avatar src={`${item.profile_pic}`} />}\n                    title={`${item.first_name} ${item.last_name}`}\n                />\n            </List.Item>\n        )\n    }\n};\n\nexport default connect()(ContributorItem);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport ContributorItem from './ContributorItem';\n\nimport { List, Typography } from 'antd';\n\nclass ContributorList extends Component {\n    render() {\n        const { pendingContributors, storyContributors, editMode } = this.props;\n        let dataSource = pendingContributors;\n\n        //checks to see if list is being used on existing story view\n        if (editMode !== undefined){\n            dataSource = [...storyContributors, ...pendingContributors];\n        }\n        return (\n            <div>\n                <Typography align=\"center\">\n                    Click contributor to remove them.\n                </Typography>\n                {pendingContributors &&\n                    <List\n                        itemLayout=\"horizontal\"\n                        dataSource={dataSource}\n                        renderItem={item => (\n                            <ContributorItem item={item} editMode={editMode}/>\n                        )}\n                    />\n                }\n            </div>\n        )\n    }\n};\n\nconst mapRStoProps = (rs) => {\n    return { \n        pendingContributors: rs.contributor.pending,\n        storyContributors: rs.storyDetail.contributor, \n    }\n}\n\nexport default connect(mapRStoProps)(ContributorList);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport ContributorForm from './ContributorForm';\nimport ContributorList from './ContributorList';\n\nimport { Modal, Button, } from 'antd';\n\nclass ContributorPopup extends Component {\n    state = {\n        loading: false,\n        visible: false,\n    }\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    }\n\n    handleCancel = () => {\n        this.props.dispatch({ type: \"RESET_PENDING_CONTRIBUTOR\" })\n        this.setState({ visible: false });\n    }\n\n    handleInvite = () => {\n        const fullPayload = {\n            story_id: this.props.story_id,\n            pendingContributor: this.props.pendingContributor\n        }\n        this.props.dispatch({ type: 'ADD_CONTRIBUTOR', payload: fullPayload});\n        this.setState({ visible: false });\n    }\n\n    render() {\n        const { visible, loading } = this.state;\n        const { editMode } = this.props;\n        const footer = [];\n        //some logic here to only show footer on edit page\n        if (editMode) {\n\n        }\n\n        let ContributorBtnName = 'View Contributors';\n        let title = 'Story Contributors';\n        //some logic to change button name based on edit/view and  \n        // whether there are many contributors, none, or one\n        if (editMode) {\n            ContributorBtnName = 'Add Contributors';\n            title = 'Inviting Contributors to Story'\n            //adds footer actions for editors\n            footer.push(<Button key=\"back\"\n                onClick={this.handleCancel}>\n                Cancel</Button>);\n            footer.push(<Button key=\"submit\"\n                type=\"primary\"\n                loading={loading}\n                onClick={this.handleInvite}\n                icon='usergroup-add'>\n                Send Invites</Button>);\n        }\n\n\n\n        return (\n            <div>\n                <Button onClick={this.showModal}\n                    className='edit-button'   >\n                    {ContributorBtnName}</Button>\n                <Modal\n                    visible={visible}\n                    title={title}\n                    onOk={this.handleOk}\n                    onCancel={this.handleCancel}\n                    footer={footer}>\n                    {editMode === true &&\n                        <ContributorForm />\n                    }\n                    <ContributorList editMode={editMode}/>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nconst mapRStoProps = (rs) => {\n    return {\n        pendingContributor: rs.contributor.pending\n    }\n}\n\nexport default connect(mapRStoProps)(ContributorPopup);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// ant design import\nimport { Modal, Input, Button } from 'antd';\n\nclass AddChapter extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            title: '',\n            visible: false,\n        }\n\n        this.baseState = this.state;\n    }\n\n    // open the chapter modal\n    openChapterModal = () => {\n        this.setState({\n            visible: true,\n        });\n    }\n\n    // function for setting local state with user input\n    onInputChange = (event) => {\n        const { name, value } = event.target;\n        this.setState({\n            [name]: value,\n        });\n    } // end onInputChange\n\n    // submits the currently entered field and allows the user to create another chapter\n    addChapter = () => {\n        // add 1 to the length of existing chapters to get the new chapter order\n        let newOrder = this.props.chapter.length + 1;\n\n        // create an array to use the existing chapter router POST route\n        let chapterArray = [];\n        chapterArray.push({ title: this.state.title,\n                            text: 'This is a newly made chapter.',\n                            order: newOrder,\n                            chapter_photo: '/images/placeholder.png',\n                            disabled: true,\n                         });\n\n        // package the data to be sent to the server\n        let dataToSend = { chapter: chapterArray,\n                           storyId: this.props.storyId,\n                         };\n        // call reduxSaga for adding a new chapter passing the chapter array and story id\n        this.props.dispatch({ type: 'ADD_EXISTING_STORY_CHAPTER', payload: dataToSend });\n\n        // set state to intial value\n        this.setState(this.baseState);\n    } // end addChapter\n\n    // do not save the entered chapter data and close modal\n    cancelEntry = () => {\n        this.setState({\n            visible: false,\n        })\n    } // end cancelEntry\n\n    render() {\n\n        return (\n            <div>\n                <Button \n                    onClick={this.openChapterModal} \n                    className='edit-button'>\n                    Add Chapter\n                </Button>\n                <Modal title=\"New chapter title\"\n                       visible={this.state.visible}\n                       onOk={this.addChapter}\n                       okText='Add Chapter'\n                       onCancel={this.cancelEntry}\n                       keyboard={true}\n                >\n                    <Input placeholder=\"next chapter\" \n                           name=\"title\"\n                           value={this.state.title}\n                           onChange={this.onInputChange} \n                           allowClear \n                    />\n                </Modal>\n            </div>\n        )\n    }\n};\n\nexport default connect()(AddChapter);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\nimport { withRouter } from \"react-router\";\nimport { Link } from 'react-router-dom';\n\nimport AddChapter from './../Chapter/AddChapter.js';\n\nimport { List, Row, Typography, Divider, Col, Avatar } from 'antd';\n\nconst { Title } = Typography;\n\nclass SummaryChapterList extends Component {\n    static propTypes = {\n        match: PropTypes.object.isRequired,\n        location: PropTypes.object.isRequired,\n        history: PropTypes.object.isRequired,\n        storyId: PropTypes.number.isRequired,\n        chapter: PropTypes.array.isRequired,\n        editMode: PropTypes.bool.isRequired,\n    };\n\n    readChapter = (e) => {\n        this.props.history.push(`/existing-story/${e.story_id}/chapter/${e.id}`)\n    }\n\n    render() {\n        const { chapter, storyId, editMode } = this.props\n        return (\n            <div >\n                {/* this will only show chapters if user is editor so they can see add chapter button */}\n                {(editMode || chapter.length > 0) &&\n                    <div>\n                        <Divider style={{ marginTop: 30, marginBottom: 0 }}>\n                            <Title level={4} style={{ textAlign: 'center' }}>Chapters</Title>\n                        </Divider>\n                        <Row type='flex' align='middle' justify='center'>\n                            {editMode &&\n                                <Col>\n                                    <AddChapter chapter={chapter} storyId={storyId} />\n                                </Col>\n                            }\n                        </Row>\n                    </div>\n                }\n                {chapter.length > 0 ?\n                    <Row type='flex' align='middle' justify='center'>\n                        <Col span={18}>\n                            <List\n                                itemLayout=\"vertical\"\n                                size=\"large\"\n                                pagination={{\n                                    pageSize: 3,\n                                }}\n                                dataSource={this.props.chapter}\n                                renderItem={item => {\n                                    const { chapter_photo, title, text } = item;\n                                    let textToShow = '';\n                                    if (text !== null) {\n                                        textToShow = text.substring(0, 40) + '...';\n                                    }\n                                    let imgToShow = './images/placeholder.png';\n                                    if (chapter_photo !== null) {\n                                        imgToShow = chapter_photo;\n                                    }\n                                    return (\n                                        <List.Item\n                                            key={title}\n                                        >\n                                            <List.Item.Meta\n                                                avatar={<Link to={`${this.props.match.url}/chapter/${this.props.chapter.indexOf(item)}`}><Avatar src={imgToShow} shape=\"square\" size={64} /></Link>}\n                                                title={<Link to={`${this.props.match.url}/chapter/${this.props.chapter.indexOf(item)}`}>{title}</Link>}\n                                                description={<Link to={`${this.props.match.url}/chapter/${this.props.chapter.indexOf(item)}`}>{textToShow}</Link>}\n                                            />\n                                        </List.Item>\n\n                                    )\n                                }}\n                            />\n                        </Col>\n                    </Row>\n                    :\n                    null\n                }\n            </div >\n        )\n    }\n};\n\nconst SummaryChapterListWithRouter = withRouter(SummaryChapterList);\n\nexport default connect()(SummaryChapterListWithRouter);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport ContributorPopup from '../Contributor/ContributorPopup';\nimport SummaryChapterList from './SummaryChapterList';\nimport SubHeader from '../../Common/SubHeader';\nimport EditButton from './EditButton';\nimport FinalizeStoryButton from './FinalizeStoryButton';\nimport ImageUpload from './../../ImageUpload/ImageUpload.js';\n\nimport { Row, Col, Card, Typography, Divider, PageHeader } from 'antd';\n\nconst { Meta } = Card;\nconst { Title, Paragraph } = Typography;\n\nclass ExistingStorySummary extends Component {\n    static propTypes = {\n        summary: PropTypes.array.isRequired,\n        contributor: PropTypes.array.isRequired,\n        chapter: PropTypes.array.isRequired,\n        editMode: PropTypes.bool.isRequired,\n        user: PropTypes.object.isRequired,\n    }\n\n    render() {\n        const { summary, chapter, contributor, editMode } = this.props;\n        const { title, author_name, id, header_photo, caption, intro } = summary[0];\n        const contributorSum = contributor.length;\n        let contributorDescription;\n        if (contributorSum === 0) {\n            contributorDescription = '';\n        } else if (contributorSum === 1) {\n            contributorDescription = ` and ${contributor[0].first_name} ${contributor[0].last_name}`;\n        } else if (contributorSum > 1) {\n            contributorDescription = ` and ${contributorSum} contributors`;\n        }\n\n        // console.log('in existingstory: ', this.props);\n\n        return (\n            <div>\n                <Row type=\"flex\" justify=\"space-around\" align=\"middle\">\n                    <Col span={24}>\n                        <SubHeader headerText='Story Summary' />\n                    </Col>\n                </Row>\n                {/* this will check that the storyDetail reducer is populated \n                before rendering its contents */}\n                {this.props.summary.length > 0 &&\n                    <div>\n                        <Row type='flex' justify=\"space-around\" align=\"middle\">\n                            <PageHeader\n                                title={title}\n                                subTitle={`By ${author_name}${contributorDescription}`}\n                            />\n                            {editMode &&\n                                <Col span={8} style={{ marginBottom: 20 }}>\n                                    <EditButton\n                                        valueToEdit={title}\n                                        type='Story'\n                                        name='Title'\n                                        id={id} />\n                                </Col>\n                            }\n                            {editMode &&\n                                <Col span={12} style={{ marginBottom: 20 }}>\n                                    <ContributorPopup editMode={editMode} story_id={id} />\n                                </Col>\n                            }\n                        </Row>\n                        <Card\n                            style={{\n                                width: 300, display: 'block', margin: 'auto', marginBottom: 10,\n                            }}\n                            cover={<img alt=\"story book cover\" src={header_photo} />}\n                        >\n                            <Meta\n                                description={caption}\n                            />\n                        </Card>\n\n                        {editMode &&\n                            <Row type='flex' justify='space-around' align=\"middle\">\n                                <Col span={6}>\n                                    <EditButton\n                                        valueToEdit={caption}\n                                        type='Story'\n                                        name='Caption'\n                                        id={id} />\n                                </Col>\n                                <Col span={10}>\n                                    <ImageUpload\n                                        photoDetails={{\n                                            typeOfPhoto: 'EDIT_STORY_IMAGE',\n                                            title: `Changing Story Photo`,\n                                            storyId: id,\n                                            buttonName: \"Change Photo\"\n                                        }}\n                                        editMode={editMode} />\n                                </Col>\n                            </Row>\n                        }\n\n\n                        <Row type='flex' justify='center'>\n                            <Divider>\n                                <Title level={4} style={{ textAlign: 'center', marginTop: 10 }}>Introduction</Title>\n                            </Divider>\n                            {intro !== null ?\n                                <Col span={18}>\n                                    <Paragraph>\n                                        {intro}\n                                    </Paragraph>\n                                </Col>\n                                :\n                                <Col span={18}>\n                                    <Paragraph> This story has no introduction yet! </Paragraph>\n                                </Col>\n\n                            }\n                            {editMode &&\n                                <Col span={18}>\n                                    <EditButton\n                                        valueToEdit={intro}\n                                        type='Story'\n                                        name='Intro'\n                                        id={id} />\n                                </Col>\n                            }\n\n                        </Row>\n                    </div>\n                }\n                {/* chapters div here */}\n                {chapter &&\n                    <SummaryChapterList chapter={chapter} storyId={summary[0].id} editMode={editMode} />\n                }\n                <FinalizeStoryButton />\n            </div>\n        )\n    }\n};\n\nconst mapStoreToProps = reduxStore => ({\n    user: reduxStore.user.userInfo,\n})\n\nexport default connect(mapStoreToProps)(ExistingStorySummary);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from \"prop-types\";\n\nimport ChapterView from './ChapterView/ChapterView';\nimport ExistingStorySummary from './ExistingStorySummary';\n\nclass ExistingStoryMain extends Component {\n\n  state = {\n    editMode: false,\n  }\n\n  static propTypes = {\n    storyDetail: PropTypes.object.isRequired,\n    user: PropTypes.object.isRequired,\n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params\n    this.props.dispatch({\n      type: 'GET_INDIVIDUAL_STORY',\n      payload: id\n    });\n    this.props.dispatch({\n      type: 'GET_STORY_CHAPTER_DETAIL',\n      payload: id\n    });\n    this.props.dispatch({\n      type: 'GET_STORY_CONTRIBUTORS',\n      payload: id\n    });\n  }\n\n  //checks incoming props to determine state value \n  //checks story contributors and author for user id and returns status accordingly\n  static getDerivedStateFromProps(props, state) {\n    const { contributor, summary } = props.storyDetail;\n    const { user } = props;\n    // console.log(props);\n    //editmode always false for completed stories\n    // console.log('in getderived state', summary.completed)\n    // console.log(summary);\n    let authorCheck = false;\n    if (summary.length > 0) {\n      //sets author t/f only after summary loads\n      // console.log('summary has loaded');\n      authorCheck = (summary[0].author_id === user.id);\n      // console.log(authorCheck);\n\n      //if story is completed edit mode always false\n      if (summary[0].completed) {\n        // console.log('story complete');\n        return { editMode: false }\n      }\n    }\n\n    //default edit mode is false\n    //searches contributors for user id\n    const contributorCheck = contributor.filter(\n      contributorObj => contributorObj.id === user.id).length > 0;\n    // console.log(contributorCheck);\n    //checks user id against author id\n\n    if (contributorCheck || authorCheck) {\n      // console.log('user is a contributor or author');\n      return { editMode: true }\n    } else {\n      return null;\n    }\n  }\n\n  render() {\n    //took out likes and contributor for now b/c compile warnings\n    const { summary, chapter, contributor } = this.props.storyDetail;\n    const { editMode } = this.state;\n    const { chapterId } = this.props.match.params;\n    // console.log('existing story main state:', this.state)\n    return (\n      <div>\n        {/* checks to make sure all relevant existing story data has loaded */}\n        {summary.length > 0 && isNaN(chapterId) &&\n          <ExistingStorySummary\n            summary={summary}\n            chapter={chapter}\n            editMode={editMode}\n            contributor={contributor} />\n        }\n        {/* if chapter id is on param loads chapter view */}\n        {chapter.length > 0 && isNaN(chapterId) !== true &&\n          <ChapterView\n            summary={summary}\n            chapter={chapter}\n            contributor={contributor}\n            // chapterId is key so component rerenders on params change\n            key={chapterId}\n            editMode={editMode} />\n        }\n      </div>\n    )\n  }\n}\n\nconst mapStoreToProps = reduxStore => ({\n  storyDetail: reduxStore.storyDetail,\n  user: reduxStore.user.userInfo,\n})\n\nexport default connect(mapStoreToProps)(ExistingStoryMain);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// ant design import\nimport { Select, Form } from 'antd';\n\nclass ChooseTemplate extends Component {\n\n    // load templates for the dropdown menu\n    componentDidMount() {\n        this.props.dispatch({ type: 'GET_TEMPLATE_STORY' });\n    }\n\n    // gets template details from the database and sets the reducer\n    handleChange = (value) => {\n        if (value === 'initial') {\n            this.props.dispatch({ type: 'SET_TEMPLATE_NEW_CREATE' })\n        } else {\n            this.props.dispatch({ type: 'GET_TEMPLATE_DETAILS', payload: value });\n        }\n    }\n\n    render() {\n        return (\n          <Form.Item label=\"Create a story or choose a template\">\n            <Select\n              defaultValue=\"Please select\"\n              style={{ width: \"100%\" }}\n              id=\"storyType\"\n              onChange={this.handleChange}\n            >\n              <Select.Option value=\"initial\">\n                Build Your Own Story\n              </Select.Option>\n              {this.props.template.map((item, i) => (\n                <Select.Option key={i} value={item.id}>\n                  {item.name}\n                </Select.Option>\n              ))}\n            </Select>\n          </Form.Item>\n        );\n    }\n};\n\nconst mapStoreToProps = reduxStore => ({\n    template: reduxStore.template.templateReducer,\n});\n\nexport default connect(mapStoreToProps)(ChooseTemplate);","import React, { Component } from 'react';\n\nimport './CreateStory.css'\n\n// ant design import\nimport { Steps } from 'antd';\n\nclass CreateStorySteps extends Component {\n\n    render() {\n        return (          \n                <Steps current={Number(this.props.current)} size='small'>\n                    <Steps.Step title=\"New or Template\" />\n                    <Steps.Step title=\"Story Details\" />\n                    <Steps.Step title=\"Chapters\" />\n                    <Steps.Step title=\"Contributors\" />\n                </Steps>\n        )\n    }\n\n}\n\nexport default CreateStorySteps;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ChooseTemplate from './ChooseTemplate.js';\nimport CreateStorySteps from './CreateStorySteps.js';\nimport './CreateStory.css'\n\nimport SubHeader from '../../Common/SubHeader';\n\n// ant design import\nimport { Form, Button, Icon, Row, Col, Popconfirm, message } from 'antd';\n\nclass CreateStoryMain extends Component {\n    // called when create story button is pressed\n    // packages local state and redux reducer data and calls the saga to create database entries\n    nextPage = (event) => {\n        event.preventDefault();\n        this.props.history.push('/choose-template/detail/');\n    } // end createStory\n\n    cancelStory = () => {\n        this.props.history.push('/home');\n    }\n\n    render() {\n        const { template } = this.props;\n\n        return (\n            <div>\n                <Row type='flex' align='middle' justify='center'>\n                    <Col span={24}>\n                        <SubHeader headerText='Create a Story' />\n                    </Col>\n                    <Col span={18}>\n                        <CreateStorySteps current={0} />\n                    </Col>\n                    <Col span={18}>\n                        <Form layout=\"vertical\" onSubmit={this.nextPage}>\n                            <Row type=\"flex\" justify=\"space-between\">\n                                <Col span={24}>\n                                    <ChooseTemplate />\n                                </Col>\n\n                                <Col span={9}>\n                                    <Button\n                                        className='create-story-nav-btn'\n                                        onClick={this.cancelStory}>\n                                        Cancel\n                                    </Button>\n                                </Col>\n\n                                <Col span={9}>\n                                    <Button\n                                        className='create-story-nav-btn'\n                                        type=\"primary\"\n                                        htmlType=\"submit\"\n                                        disabled={template.name === ''}>\n                                        Next\n                                        <Icon type=\"right\" />\n                                    </Button>\n                                </Col>\n\n                            </Row>\n                        </Form>\n                    </Col>\n\n                </Row>\n\n\n\n\n            </div>\n\n        )\n    }\n\n}\n\nconst mapStoreToProps = reduxStore => ({\n    template: reduxStore.template.templateNewStoryReducer,\n});\n\nexport default connect(mapStoreToProps)(CreateStoryMain);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport ImageUpload from './../../ImageUpload/ImageUpload.js';\nimport CreateStorySteps from './../CreateStory/CreateStorySteps.js';\nimport SubHeader from '../../Common/SubHeader';\n\nimport { Form, Input, Button, Avatar, Row, Col, Icon } from 'antd';\nimport './CreateStory.css';\n\nclass CreateStoryDetail extends Component {\n    previousButton = () => {\n        this.props.history.push('/choose-template/');\n    }\n\n    hasErrors = (fieldsError) => {\n        return Object.keys(fieldsError).some(field => fieldsError[field]);\n    }\n\n    // called when create story button is pressed\n    // packages local state and redux reducer data and calls the saga to create database entries\n    createStory = (event) => {\n        event.preventDefault();\n        this.props.form.validateFieldsAndScroll((error, values) => {\n            if (!error) {\n                // variable for story data payload\n                let storyData = '';\n\n                // will create different data to send if the story statred as a template\n                if (this.props.template.title !== 'initial') {\n                    storyData = {\n                        title: values.title,\n                        header_photo: this.props.image.storyImage,\n                        caption: values.caption,\n                        intro: values.intro,\n                        is_template: true,\n                    };\n                } else {\n                    storyData = {\n                        title: values.title,\n                        header_photo: this.props.image.storyImage,\n                        caption: values.caption,\n                        intro: values.intro,\n                        is_template: false,\n                    };\n                }\n\n                // send data to the saga\n                this.props.dispatch({ type: 'SET_NEW_STORY', payload: storyData });\n                this.props.history.push('/choose-template/chapter/');\n\n                // clear the fields\n                this.props.form.resetFields();\n            }\n        });\n    } // end createStory\n\n    render() {\n        const { story, image, template } = this.props;\n        const { getFieldDecorator, getFieldsError } = this.props.form;\n\n        return (\n            <div >\n                <Row type='flex' align='middle' justify='center'>\n                    <Col span={24}>\n                        <SubHeader headerText='Fill Out Story Details' />\n                    </Col>\n                    <Col span={18}>\n                        <CreateStorySteps current={1} />\n                    </Col>\n                    <Col span={18}>\n                        <Form layout=\"vertical\" onSubmit={this.createStory}>\n                            <Row type=\"flex\" justify=\"space-between\" style={{ marginBottom: 20 }}>\n                                <Col span={24}>\n                                    <Form.Item\n                                        label=\"Story title\"\n                                    >\n                                        {getFieldDecorator('title', {\n                                            initialValue: story.title !== '' ? story.title : template.title,\n                                            rules: [{ required: true, message: 'Please enter a story title!' }],\n                                        })(<Input \n                                                allowClear \n                                                placeholder=\"Story title\" />)\n                                        }\n                                    </Form.Item>\n                                </Col>\n                                <Col span={24}>\n                                    <Form.Item\n                                        label=\"Story intro\"\n                                    >\n                                        {getFieldDecorator('intro', {\n                                            initialValue: story.intro !== '' ? story.intro : template.intro,\n                                            rules: [{ required: true, message: 'Please enter an intro!' }],\n                                        },\n                                        )(\n                                            <Input allowClear\n                                                placeholder=\"Enter an introduction\"\n                                            />\n                                        )}\n                                    </Form.Item>\n                                </Col>\n                                <Col span={24}>\n                                    <Form.Item\n                                        label=\"Upload Story Photo\">\n                                        {getFieldDecorator('header_photo', {\n                                            initialValue: template.placeholder_image !== '' ? template.placeholder_image : image.storyImage,\n                                        },\n                                        )(\n                                            <div>\n                                                <Avatar shape=\"square\"\n                                                    size={150}\n                                                    icon='picture'\n                                                    src={template.placeholder_image !== '' ? template.placeholder_image : image.storyImage}\n                                                    style={{ display: 'block', margin: 'auto', marginBottom: 10 }}\n                                                />\n                                                <ImageUpload photoDetails={{ typeOfPhoto: 'STORY', title: \"Adding Photo for New Story\", buttonName: 'Add Story Photo' }} />\n                                            </div>\n                                        )}\n                                    </Form.Item>\n                                </Col>\n                                <Col span={24}>\n                                    <Form.Item\n                                        label=\"Photo caption\"\n                                    >\n                                        {getFieldDecorator('caption', {\n                                            initialValue: story.caption !== '' ? story.caption : template.caption,\n                                        },\n                                        )(\n                                            <Input allowClear\n                                                placeholder=\"Add a caption for your picture\"\n                                            />\n                                        )}\n                                    </Form.Item>\n                                </Col>\n                                <Col span={9}>\n                                    <Button onClick={this.previousButton}\n                                        className='create-story-nav-btn'>\n                                        <Icon type=\"left\" />\n                                        Previous\n                                    </Button>\n                                </Col>\n                                <Col span={9}>\n                                    <Button type=\"primary\"\n                                        htmlType=\"submit\"\n                                        className='create-story-nav-btn'\n                                        disabled={this.hasErrors(getFieldsError())}>\n                                        Next\n                                    <Icon type=\"right\" />\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n}\n\nconst WrappedCreateStoryDetail = Form.create()(CreateStoryDetail);\n\nconst mapStoreToProps = reduxStore => ({\n    story: reduxStore.story.newStoryReducer,\n    image: reduxStore.story.imageReducer,\n    template: reduxStore.template.templateNewStoryReducer,\n});\n\nexport default connect(mapStoreToProps)(WrappedCreateStoryDetail);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport CreateStorySteps from './CreateStorySteps.js'\nimport SubHeader from '../../Common/SubHeader';\n\n// ant design import\nimport { Form, Input, Button, Icon, Row, Col } from 'antd';\n\nlet id = 0;\n\nclass CreateStoryChapter extends Component {\n    removeChapter = (k) => {\n        const { form } = this.props;\n        // can use data-binding to get\n        const keys = form.getFieldValue('keys');\n        // can use data-binding to set\n        form.setFieldsValue({\n            keys: keys.filter(key => key !== k),\n        });\n    } // end removeChapter\n\n    addChapter = () => {\n        const { form } = this.props;\n        // can use data-binding to get\n        const keys = form.getFieldValue('keys');\n        const nextKeys = keys.concat(id++);\n        // can use data-binding to set\n        // important! notify form to detect changes\n        form.setFieldsValue({\n            keys: nextKeys,\n        });\n    } // end addChapter\n\n    // go back to the previous page\n    previousButton = () => {\n        this.props.history.push('/choose-template/detail/');\n    } // end previousButton\n\n    // called when create story button is pressed\n    // packages local state and redux reducer data and calls the saga to create database entries\n    nextPage = (event) => {\n        event.preventDefault();\n        this.props.form.validateFieldsAndScroll((error, values) => {\n            if (!error) {\n                // check keys value to find out if there are any chapters\n                if (values.keys.length > 0) {\n                    // filter out empty chapters that have been removes\n                    let filterValues = values.title.filter((item) => ({ title: item }));\n                    // package the chapters in an object for the reducer\n                    let newPayload = filterValues.map((ch) => ({\n                        title: ch,\n                        text: '',\n                        chapter_photo: '/images/placeholder.png',\n                    }));\n                    // create a variable for dispatching to redux saga and send\n                    let dataToSend = { type: 'SET_NEW_STORY_CHAPTER', payload: newPayload };\n                    this.props.dispatch(dataToSend);\n                }\n                // go to the contributor page\n                this.props.history.push('/choose-template/contributor/');\n            } else {\n                console.log('Error: ', values);\n            }\n        });\n    } // end createChapter\n\n    render() {\n\n        const { template } = this.props;\n        const { getFieldDecorator, getFieldValue } = this.props.form;\n        // create initial values for the 'keys' to show template chapters\n        const tempArray = template.length > 0 ? template.map((item, i) => (i)) : [];\n        // const chapArray = chapter.length > 0 ? chapter.map((item,i) => (i)) : [];\n        // const useArray = chapter.length !== 0 ? chapArray : tempArray;\n\n        // used in the formItems map to display a user prompt if a template\n        const isTemplate = template.length > 0 ? true : false;\n\n        getFieldDecorator('keys', { initialValue: tempArray });\n        const keys = getFieldValue('keys');\n        const formItems = keys.map((k, index) => (\n            <Col span={24} key={index}>\n                <Form.Item\n                    label={`Chapter ${index + 1}`}\n                    extra={isTemplate && (k >= 0 && k <= (template.length - 1)) ? template[k].text : ''}\n                    required={true}\n                >\n                    {getFieldDecorator(`title[${k}]`, {\n                        initialValue: isTemplate && (k >= 0 && k <= (template.length - 1)) ? template[k].title : '',\n                        validateTrigger: ['onChange', 'onBlur'],\n                        rules: [{\n                            required: true,\n                            whitespace: true,\n                            message: \"Please enter a chapter title or delete.\",\n                        }],\n                    })(\n                        <Input style={{ width: '100%' }}\n                            addonAfter={<Icon\n                                className=\"dynamic-delete-button\"\n                                type=\"minus-circle-o\"\n                                disabled={keys.length === 1}\n                                onClick={() => this.removeChapter(k)}\n                            />} />\n                    )}\n\n                </Form.Item>\n            </Col>\n        ));\n\n        return (\n            <div>\n                <Row type='flex' align='middle' justify='center'>\n                    <Col span={24}>\n                        <SubHeader headerText='Add Chapters' />\n                    </Col>\n                    <Col span={18}>\n                        <CreateStorySteps current={2} />\n                    </Col>\n                    <Col span={18}>\n                        <Form layout=\"vertical\" onSubmit={this.nextPage}>\n                            <Row type=\"flex\" justify=\"space-between\" style={{ marginBottom: 20 }}>\n                                {formItems}\n\n                                <Col span={24}>\n                                    <Form.Item >\n                                        <Button type=\"dashed\" onClick={this.addChapter} style={{ width: '100%' }}>\n                                            <Icon type=\"plus\" />\n                                            Add another chapter\n                                        </Button>\n                                    </Form.Item>\n                                </Col>\n                                <Col span={9}>\n                                    <Button onClick={this.previousButton} className='create-story-nav-btn'>\n                                        <Icon type=\"left\" />\n                                        Previous\n                                    </Button>\n                                </Col>\n                                <Col span={9}>\n                                    <Button type=\"primary\" htmlType=\"submit\" className='create-story-nav-btn'>\n                                        Next\n                                        <Icon type=\"right\" />\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n\n}\n\nconst WrappedCreateStoryChapter = Form.create()(CreateStoryChapter);\n\nconst mapStoreToProps = reduxStore => ({\n    template: reduxStore.template.templateNewChapterReducer,\n});\n\nexport default connect(mapStoreToProps)(WrappedCreateStoryChapter);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport ContributorForm from '../Contributor/ContributorForm.js';\nimport ContributorList from '../Contributor/ContributorList.js';\nimport CreateStorySteps from './../CreateStory/CreateStorySteps.js';\nimport SubHeader from '../../Common/SubHeader';\n\n// ant design import\nimport { Form, Button, Row, Col, Typography, Icon } from 'antd';\n\nclass CreateStoryContributor extends Component {\n    // go back to the previous page\n    previousButton = () => {\n        this.props.history.push('/choose-template/chapter/');\n    }\n\n    // called when create story button is pressed\n    // packages local state and redux reducer data and calls the saga to create database entries\n    createStory = (event) => {\n        event.preventDefault();\n        this.props.form.validateFieldsAndScroll((error, values) => {\n            if (!error) {\n                // package story, chapter, and contributor reducers and send to saga\n                // seperate files for story, chapter and contributor data sent to the redux saga\n                let storyDataToSend = this.props.story;\n                let chapterDataToSend = this.props.chapter;\n                let contributorDataToSend = this.props.contributor;\n\n                // bundle the story, chapter and contributon files together and create a payload\n                let completeDataToSend = { story: storyDataToSend, chapter: chapterDataToSend, contributor: contributorDataToSend };\n\n                // send data to the saga\n                this.props.dispatch({ type: 'POST_NEW_STORY', payload: completeDataToSend });\n                // clear the fields\n                this.props.form.resetFields();\n                // go to home page\n                this.props.history.push('/home');\n            }\n        });\n    } // end createStory\n\n    render() {\n        const { contributor } = this.props;\n\n        return (\n            <div>\n                <Row type='flex' align='middle' justify='center'>\n                    <Col span={24}>\n                        <SubHeader headerText='Add Contributors' />\n                    </Col>\n                    <Col span={18}>\n                        <CreateStorySteps current={3} />\n                    </Col>\n                    <Col span={18}>\n                        <Form layout=\"vertical\" onSubmit={this.createStory}>\n                            <Row type=\"flex\" justify=\"space-between\" style={{ marginBottom: 20 }}>\n                                <Col span={24}>\n                                    <Form.Item\n                                        label=\"Add contributors\">\n                                        <ContributorForm />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={24} style={{marginBottom: 20}}>\n                                    {contributor.length !== 0 ?\n                                        <ContributorList editMode='true'/> \n                                        :\n                                        <Typography align=\"center\">\n                                            Contributors will show up here as you add them.\n                                        </Typography>\n                                    }\n                                </Col>\n                                <Col span={9}>\n                                    <Button onClick={this.previousButton}\n                                        className='create-story-nav-btn'>\n                                        <Icon type=\"left\" />\n                                        Previous\n                                    </Button>\n                                </Col>\n                                <Col span={9}>\n                                    <Button type=\"primary\"\n                                        htmlType=\"submit\"\n                                        className='create-story-nav-btn'>\n                                        Create Story\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </Col>\n                </Row>\n            </div>\n        )\n    }\n\n}\n\nconst WrappedCreateStoryContributor = Form.create()(CreateStoryContributor);\n\nconst mapStoreToProps = reduxStore => ({\n    story: reduxStore.story.newStoryReducer,\n    chapter: reduxStore.chapter.newStoryChapterReducer,\n    contributor: reduxStore.contributor.pending,\n});\n\nexport default connect(mapStoreToProps)(WrappedCreateStoryContributor);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\n\nimport { Typography, Icon, Badge } from 'antd';\n\nconst { Text } = Typography;\n\nclass NavigationLink extends Component {\n    render() {\n        // console.log('in navigation link render', this.props);\n        const { route, name, iconType } = this.props.routeObj;\n        let onClickFxn = this.props.handleSideBar.bind(this, false);\n        if (name === 'Log Out') {\n            onClickFxn = () => this.props.dispatch({ type: 'LOGOUT' })\n        }\n        const textStyle = { color: 'inherit', fontSize: '16px' };\n\n        return (\n            <NavLink exact to={route} onClick={onClickFxn} activeClassName='nav-link-active' className='nav-link-default'>\n                <div className='nav-link-div'>\n                    {name === 'Notifications' ?\n                        (<Badge count={this.props.notificationCount}><Text style={textStyle}><Icon type={iconType} style={textStyle} /> &nbsp; {name}</Text></Badge>)\n                        : (<Text style={textStyle}><Icon type={iconType} style={textStyle} /> &nbsp; {name}</Text>)}\n                </div>\n            </NavLink>\n        )\n    }\n}\n\n// {this.props.story ?\n//     (<ContributedStoryList history={this.props.history} />) : (<p>loading...</p>)}\n\nconst mapStateToProps = reduxStore => ({\n    invite: reduxStore.notification.invite,\n});\n\nexport default connect(mapStateToProps)(NavigationLink);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport NavigationLink from './NavigationLink';\n\nimport { Drawer, Typography, Divider } from 'antd';\nimport './Nav.css';\nimport 'antd/dist/antd.css';\n\n// this drawer contains the main nav\n// SideDrawer component is sourced in the Nav.js component\n\nconst { Title } = Typography;\n\nclass SideDrawer extends Component {\n    //creates navLinks\n    buildLinks = () => {\n        const routes = [\n            { route: '/home', name: 'Home', iconType: 'home' },\n            { route: '/notification', name: 'Notifications', iconType: 'bell' },\n            { route: '/choose-template', name: 'Begin Story', iconType: 'plus-square' },\n            { route: '/search', name: 'Browse Stories', iconType: 'search' },\n            { route: '/', name: 'Log Out', iconType: 'logout' }];\n        return routes.map((routeObj, i) => {\n            return <NavigationLink routeObj={routeObj} notificationCount={this.props.invite.length} handleSideBar={this.props.handleSideBar} key={i} />\n        })\n    }\n\n    render() {\n        const { userInfo, visible, handleSideBar } = this.props;\n        const logo = './images/kevinslogos/JourneyTellr-Logo_icononly_Color-version.png';\n        //determines if placeholder pic needs to be used\n        let profilePic = './images/placeholder.png';\n        if (userInfo.profile_pic !== null) {\n            profilePic = userInfo.profile_pic;\n        }\n        // console.log('in side drawer render');\n        return (\n            <Drawer\n                width={300}\n                placement=\"left\"\n                closable={true}\n                onClose={handleSideBar.bind(this, false)}\n                visible={visible}\n            >\n                <img src={logo} alt={'logo'} height=\"40\" width=\"40\" className=\"logo-icon-only\" />\n                <Divider />\n                <Link to=\"/profile\" onClick={handleSideBar.bind(this, false)} >\n                    {/* Title contains current users profile picture and name */}\n                    {/* When clicked on, the user will be taken to the Profile page */}\n                    <Title level={4}>\n                        <img src={profilePic} height=\"60\" alt='placeholder' />\n                        &nbsp;&nbsp;\n                            {userInfo.first_name}&nbsp;{userInfo.last_name}\n                    </Title>\n                </Link>\n                <Divider />\n                {this.buildLinks()}\n            </Drawer>\n        );\n    }\n};\n\n\nconst mapStateToProps = store => ({\n    userInfo: store.user.userInfo,\n    invite: store.notification.invite,\n});\n\nexport default connect(mapStateToProps)(SideDrawer);\n\n","import React, { Component } from 'react';\nimport SideDrawer from './SideDrawer';\n\n// icons used on this component\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\n\nimport './Nav.css';\n\n//adds special icon library\nlibrary.add(faBars);\n\nclass NavButton extends Component {\n    state = {\n        visible: false,\n    };\n\n    // this causes the nav drawer to appear when called\n    handleSideBar = (bool, e) => {\n        this.setState({\n            visible: bool,\n        });\n    };\n\n    render() {\n        // console.log(this.state);\n        return (\n            <div className='header-button-div'>\n                <FontAwesomeIcon\n                    className=\"drawer-btn\"\n                    icon=\"bars\"\n                    size=\"2x\"\n                    onClick={this.handleSideBar.bind(this, true)}\n                    visible={toString(this.state.visible)}\n                />\n                {this.state.visible &&\n                    <SideDrawer handleSideBar={this.handleSideBar} visible={this.state.visible} />\n                }\n            </div>\n        )\n    }\n}\n\nexport default NavButton;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport SubHeader from '../Common/SubHeader';\n\nimport { Input, Icon, Row, Col, Button, notification } from 'antd';\nimport './LoginPage.css';\n\nclass LoginPage extends Component {\n  state = {\n    email: '',\n    password: '',\n  };\n\n  login = (event) => {\n    event.preventDefault();\n    if (this.state.email && this.state.password) {\n      this.props.dispatch({\n        type: 'LOGIN',\n        payload: {\n          email: this.state.email.toUpperCase(),\n          password: this.state.password,\n        },\n      });\n    } else {\n      this.props.dispatch({ type: 'LOGIN_INPUT_ERROR' });\n    }\n  } // end login\n\n  handleInputChangeFor = (event) => {\n    this.setState({\n      [event.target.id]: event.target.value,\n    });\n  }\n\n  emitEmpty = () => {\n    this.userNameInput.focus();\n    this.setState({ email: '' });\n  }\n\n  showLoginErrorMessage = () => {\n    notification.open({\n      key: 'loginMessage',\n      message: 'An Error Occurred When Logging In',\n      description: this.props.errors.loginMessage,\n      duration: 4,\n    });\n    this.props.dispatch({ type: 'CLEAR_LOGIN_ERROR' });\n  };\n\n  render() {\n    const { email, password } = this.state;\n    const { handleInputChangeFor } = this;\n    const suffix = email ? <Icon type=\"close-circle\" onClick={this.emitEmpty} /> : null;\n\n    return (\n      <div>\n        {this.props.errors.loginMessage &&\n          this.showLoginErrorMessage()\n        }\n        <Row type='flex' align='middle' justify='center'>\n          <Col span={24}>\n            <SubHeader headerText='Log In' />\n          </Col>\n\n          <Col span={20}>\n            <form onSubmit={this.login} className=\"login-form\">\n              <Row type=\"flex\" justify=\"center\">\n                <Col span={18} style={{ margin: '10px 0px' }}>\n                  <label htmlFor=\"email\">\n                    Email:\n                    <Input\n                      placeholder=\"Enter your email address\"\n                      prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                      suffix={suffix}\n                      value={email}\n                      id='email'\n                      onChange={handleInputChangeFor} />\n                  </label>\n                </Col>\n                <Col span={18} style={{ marginBottom: '10px' }}>\n                  <label htmlFor=\"password\">\n                    Password:\n                    <Input\n                      placeholder='Enter your password'\n                      prefix={<Icon type='lock' style={{ color: 'rgba(0,0,0,.25)' }} />}\n                      type=\"password\"\n                      value={password}\n                      id='password'\n                      onChange={handleInputChangeFor} />\n                  </label>\n                </Col>\n                <Col span={18} style={{ marginBottom: '10px' }}>\n                  <Button\n                    type=\"primary\"\n                    htmlType='submit'\n                    style={{ width: '100%' }}>\n                    Log In</Button>\n                </Col>\n              </Row>\n            </form>\n          </Col>\n        </Row>\n        \n        <Row>\n          <Col style={{\n            margin: '20px',\n            float: 'right',}}>\n            <Button\n              onClick={() => { this.props.dispatch({ type: 'SET_TO_REGISTER_MODE' }) }}>\n              Register</Button>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n});\n\nexport default connect(mapStateToProps)(LoginPage);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport { Modal, Button, Row, Avatar, Input, Col } from 'antd';\n\nimport './ImageUpload.css';\n\nclass RegisterImageUpload extends Component {\n    state = {\n        visible: false,\n        file: null,\n        confirmLoading: false,\n        button: 'default',\n        buttonName: this.props.photoDetails.buttonName\n    }\n\n    //photo details contains title for button name and typeOfPhoto keywords for next saga\n    static propTypes = {\n        photoDetails: PropTypes.object.isRequired,\n        editMode: PropTypes.bool,\n    }\n\n    showModal = () => {\n        this.setState({\n            visible: true,\n        });\n    }\n\n    handleOk = (e) => {\n        console.log(e);\n        this.submitFile();\n        this.setState({\n            confirmLoading: true,\n            button: \"primary\",\n            buttonName: \"Profile Picture Added\"\n            \n        });\n        setTimeout(() => {\n            this.setState({\n                visible: false,\n                file: null,\n                confirmLoading: false,\n            });\n        }, 2000);\n    }\n\n    handleCancel = (e) => {\n        console.log(e);\n        this.setState({\n            visible: false,\n        });\n    }\n    submitFile = (event) => {\n        // console.log('in sF');\n        // event.preventDefault();\n        const formData = new FormData();\n        formData.append('file', this.state.file);\n        const action = {\n            type: 'ADD_IMAGE_AWS',  //directs dispach on which saga to use based on props\n            nextType: `ADD_IMAGE_${this.props.photoDetails.typeOfPhoto}`,\n            payload: formData,\n            id: this.props.user.userInfo.id,\n            chapterId: this.props.photoDetails.chapterId,\n            storyId: this.props.photoDetails.storyId,\n        }\n        this.props.dispatch(action);\n        // console.log(this.props.photoDetails.typeOfPhoto);\n    }\n\n    handleFileUpload = (event) => {\n        this.setState({\n            file: event.target.files[0],\n        })\n    }\n\n    render() {\n        const { title } = this.props.photoDetails;\n        const { visible, confirmLoading, file, button, buttonName } = this.state;\n        // determines button class based on whether its used on for story editing\n        let buttonClass;\n        if (this.props.editMode) {\n            buttonClass = 'edit-button';\n        }\n        let thumbnailSrc = file;\n        if (this.state.file !== null) {\n            thumbnailSrc = URL.createObjectURL(file);\n        }\n        return (\n            <div>\n                <Button\n                    type={button}\n                    onClick={this.showModal}\n                    className={buttonClass}\n                    style={{ width: '100%' }}>\n                    {buttonName}\n                </Button>\n                <Modal\n                    title={title}\n                    style={{ top: 20 }}\n                    visible={visible}\n                    onOk={this.handleOk}\n                    okText='Save Photo'\n                    onCancel={this.handleCancel}\n                    confirmLoading={confirmLoading}\n                >\n                    {/* <div>Take A Photo: <input label='upload file' type='file' accept=\"image/*\" capture=\"camera\" onChange={this.handleFileUpload} /></div> This is being commented out for the sake of the presentation since it is useless on browser */}\n                    {/* <h2>OR</h2> */}\n                    <Row type=\"flex\" justify=\"center\">\n                        <Col>\n                            <Input type=\"file\" accept=\"image/*\" onChange={this.handleFileUpload} />\n                        </Col>\n                        <Col style={{ marginTop: 10 }}>\n                            <Avatar shape=\"square\" size={100} icon=\"picture\" src={thumbnailSrc} />\n                        </Col>\n                    </Row>\n                </Modal>\n\n            </div>\n        );\n    }\n}\nconst mapStoreToProps = reduxStore => ({\n    user: reduxStore.user,\n})\nexport default connect(mapStoreToProps)(RegisterImageUpload)","import React, { Component } from 'react'\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport RegisterImageUpload from '../ImageUpload/RegisterImageUpload';\n\nimport { Button, Icon, Row, Col, Input } from 'antd';\nimport './RegisterPage.css';\n\nclass ProfileInfo extends Component {\n  static propTypes = {\n    registration: PropTypes.object.isRequired,\n    handleInputChangeFor: PropTypes.func.isRequired,\n    handleRegisterNavButton: PropTypes.func.isRequired,\n  }\n\n  advanceRegistration = (e) => {\n    e.preventDefault();\n    this.props.handleRegisterNavButton('user');\n  }\n\n  render() {\n    const { registration, handleInputChangeFor } = this.props;\n\n    return (\n      <form onSubmit={this.advanceRegistration}>\n        <Row type=\"flex\" justify=\"center\">\n          <Col span={18} style={{ margin: '10px 0px' }}>\n            <h3>Please enter your public profile info.</h3>\n          </Col>\n          <Col span={18} style={{ marginBottom: '10px' }}>\n            <label htmlFor=\"first_name\">\n              First Name:\n              <Input\n                placeholder='Enter your first name'\n                type=\"text\"\n                name=\"first_name\"\n                value={registration.first_name}\n                onChange={handleInputChangeFor}\n                required />\n            </label>\n          </Col>\n          <Col span={18} style={{ marginBottom: '10px' }}>\n            <label htmlFor=\"last_name\">\n              Last Name:\n              <Input\n                placeholder='Enter your last name'\n                type=\"text\"\n                name=\"last_name\"\n                value={registration.last_name}\n                onChange={handleInputChangeFor}\n                required />\n            </label>\n          </Col>\n\n          <Col span={18} style={{ marginBottom: '10px' }} >\n            <RegisterImageUpload photoDetails={{ typeOfPhoto: 'REGISTER', title: 'Choosing New Profile Photo', buttonName: 'Add Profile Photo' }} />\n          </Col>\n\n          <Col span={12}>\n            <Button\n              type='primary'\n              htmlType='submit'\n              className='registration-button'>\n              Next\n              <Icon type=\"right\" />\n            </Button>\n          </Col>\n        </Row>\n\n\n      </form>\n    )\n  }\n}\n\nexport default connect()(ProfileInfo);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { Button, Icon, Input, Row, Col } from 'antd';\nimport './RegisterPage.css';\n\nclass UserInfo extends Component {\n  static propTypes = {\n    registration: PropTypes.object.isRequired,\n    handleInputChangeFor: PropTypes.func.isRequired,\n    handleRegisterNavButton: PropTypes.func.isRequired,\n  }\n\n  registerUser = (event) => {\n    event.preventDefault();\n    const { first_name, last_name, email, password,\n      profile_pic, confirm_email, confirm_password } = this.props.registration;\n\n    if (first_name && last_name && (email.toUpperCase() === confirm_email.toUpperCase()) && (password === confirm_password)) {\n      this.props.dispatch({\n        type: 'REGISTER',\n        payload: {\n          first_name: first_name,\n          last_name: last_name,\n          email: email.toUpperCase(),\n          password: password,\n          profile_pic: profile_pic\n        },\n      });\n    } else {\n      this.props.dispatch({ type: 'REGISTRATION_INPUT_ERROR' });\n    }\n  } // end registerUser\n\n  render() {\n    const { registration,\n      handleInputChangeFor,\n      handleRegisterNavButton, } = this.props;\n\n    return (\n      <form onSubmit={this.registerUser}>\n        <Row type=\"flex\" justify=\"space-around\" >\n          <Col span={18} style={{ margin: '10px 0px' }}>\n            <h3>Please enter your log in information.</h3>\n          </Col>\n          <Col span={18} style={{ marginBottom: '10px' }}>\n            <label htmlFor=\"email\">\n              <Input\n                placeholder=\"yourname@email.com\"\n                onChange={handleInputChangeFor}\n                name='email'\n                value={registration.email}\n                required />\n            </label>\n          </Col>\n\n          <Col span={18} style={{ marginBottom: '10px' }}>\n            <label htmlFor=\"confirm_email\">\n              Confirm Email:\n            <Input\n                placeholder=\"yourname@email.com\"\n                type=\"email\"\n                name=\"confirm_email\"\n                value={registration.confirm_email}\n                onChange={handleInputChangeFor}\n                required />\n            </label>\n          </Col>\n\n          <Col span={18} style={{ marginBottom: '10px' }}>\n            <label htmlFor=\"password\">\n              Password:\n              <Input\n                placeholder=\"Enter your password\"\n                type=\"password\"\n                name=\"password\"\n                value={registration.password}\n                onChange={handleInputChangeFor}\n                required />\n            </label>\n          </Col>\n\n          <Col span={18} style={{ marginBottom: '10px' }}>\n            <label htmlFor=\"confirm_password\">\n              Confirm Password:\n              <Input\n                placeholder=\"Re-enter your password\"\n                type=\"password\"\n                name=\"confirm_password\"\n                value={registration.confirm_password}\n                onChange={handleInputChangeFor}\n                required\n              />\n            </label>\n          </Col>\n\n          <Col span={8}>\n            <Button\n              onClick={handleRegisterNavButton.bind(this, 'profile')}\n              className='registration-button'>\n              <Icon type='left' />\n              Back\n            </Button>\n          </Col>\n\n          <Col span={8}>\n            <Button onClick={this.registerUser}\n              type=\"primary\"\n              htmlType='submit'\n              className='registration-button'>\n              Register </Button>\n          </Col>\n        </Row>\n\n\n      </form>\n\n    )\n  }\n}\n\nexport default connect()(UserInfo);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// import { Button, Icon } from 'antd';\n\nimport ProfileInfo from './ProfileInfo';\nimport UserInfo from './UserInfo';\nimport SubHeader from '../Common/SubHeader';\n\nimport { notification, Row, Col, Button } from 'antd';\n\nclass RegisterPage extends Component {\n  state = {\n    page: 'profile',\n  }\n\n  handleInputChangeFor = (event) => {\n    this.props.dispatch({\n      type: 'UPDATE_REGISTRATION',\n      payload: {\n        [event.target.name]: event.target.value,\n      }\n    });\n  }\n\n  handleRegisterNavButton = (page, e) => {\n    this.setState({ page: page })\n  }\n\n  showRegisterErrorMessage = () => {\n    notification.open({\n      key: 'registerMessage',\n      message: 'Error with Registration',\n      description: this.props.errors.registrationMessage,\n      duration: 4,\n    });\n    this.props.dispatch({ type: 'CLEAR_REGISTRATION_ERROR' });\n  }\n\n  render() {\n    const { registration } = this.props;\n\n    return (\n      <div>\n        {this.props.errors.registrationMessage &&\n          this.showRegisterErrorMessage()\n        }\n        <Row>\n          <Col>\n            <SubHeader headerText='New User Registration' />\n          </Col>\n\n          {this.state.page === 'profile' &&\n            <Col>\n              <ProfileInfo registration={registration}\n                handleInputChangeFor={this.handleInputChangeFor}\n                handleRegisterNavButton={this.handleRegisterNavButton} />\n            </Col>\n          }\n\n          {this.state.page === 'user' &&\n            <Col>\n              <UserInfo registration={registration}\n                handleInputChangeFor={this.handleInputChangeFor}\n                handleRegisterNavButton={this.handleRegisterNavButton} />\n            </Col>\n          }\n          <Col style={{\n            margin: '20px',\n            float: 'left',\n          }}>\n            <Button\n              onClick={() => { this.props.dispatch({ type: 'SET_TO_LOGIN_MODE' }) }}>\n              Return to Login\n            </Button>\n          </Col>\n        </Row>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  errors: state.errors,\n  registration: state.user.registration,\n});\n\nexport default connect(mapStateToProps)(RegisterPage);\n\n","import React from 'react';\nimport {Route} from 'react-router-dom'\nimport {connect} from 'react-redux';\nimport LoginPage from '../LoginPage/LoginPage';\nimport RegisterPage from '../RegisterPage/RegisterPage';\n\n// A Custom Wrapper Component -- This will keep our code DRY.\n// Responsible for watching redux state, and returning an appropriate component\n// API for this component is the same as a regular route\n\n// THIS IS NOT SECURITY! That must be done on the server\n// A malicious user could change the code and see any view\n// so your server-side route must implement real security\n// by checking req.isAuthenticated for authentication\n// and by checking req.user for authorization\n\nconst ProtectedRoute = (props) => {\n  // Using destructuring, this takes ComponentToProtect from component\n  // prop and grabs all other props to pass them along to Route\n  const {\n    // Alias prop 'component' as 'ComponentToProtect'\n    component: ComponentToProtect,\n    user,\n    loginMode,\n    ...otherProps\n  } = props;\n\n  let ComponentToShow;\n\n  if(user.id) {\n    // if the user is logged in (only logged in users have ids)\n    // show the component that is protected\n    ComponentToShow = ComponentToProtect;\n  } else if (loginMode === 'login') {\n    // if they are not logged in, check the loginMode on Redux State\n    // if the mode is 'login', show the LoginPage\n    ComponentToShow = LoginPage;\n  } else {\n    // the the user is not logged in and the mode is not 'login'\n    // show the RegisterPage\n    ComponentToShow = RegisterPage;\n  }\n\n  // We return a Route component that gets added to our list of routes\n  return (\n      <Route\n        // all props like 'exact' and 'path' that were passed in\n        // are now passed along to the 'Route' Component\n        {...otherProps}\n        component={ComponentToShow}\n      />\n  )\n}\n\n// Instead of taking everything from state, we just want the user and loginMode\n// to determine which page we should show the user\n// if you wanted you could write this code like this:\n// const mapStateToProps = ({ user, loginMode }) => ({ user, loginMode });\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user.userInfo,\n    loginMode: state.loginMode,\n  }\n}\n\nexport default connect(mapStateToProps)(ProtectedRoute)\n\n\n","import React, { Component } from 'react';\n// import ImageUpload from '../ImageUpload/ImageUpload';\nconst axios = require('axios');\n\nclass ProfilePage extends Component {\n\n    //posts to fakes.router.js\n    addFakePeople = (event) => {\n        axios.post('/fakes');\n    }\n\n    //posts to fakes.router.js\n    addFakeStories = (event) => {\n        axios.post('/fakes/story');\n    }\n\n    //this will post to fakes.router.js\n    //and add 50 fake chapters to chapter table\n    addFakeChapters = (event) => {\n        axios.post('fakes/chapter');\n    }\n\n    addFakeLikes = (event) => {\n        axios.post('fakes/likes');\n    }\n\n    render() {\n\n        return (\n            <div>\n                <div>\n                    <button onClick={this.addFakePeople}>Add 300 people to the database</button><br />\n                    <button onClick={this.addFakeStories}>Add 30 stories to the database</button><br />\n                    <button onClick={this.addFakeChapters}>Add 50 chapters to the database</button><br />\n                    <button onClick={this.addFakeLikes}>Add 25 likes to random stories</button>\n                    {/* <ImageUpload /> */}\n                </div>\n            </div>\n        )\n    }\n\n}\nexport default ProfilePage;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n  Link,\n} from 'react-router-dom';\n\n//app routes\nimport HomePage from '../Home/HomePage';\nimport Notification from '../Notification/Notification';\nimport ProfilePage from '../Profile/ProfilePage';\nimport SearchMain from '../Search/SearchMain';\nimport ExistingStoryMain from '../Story/ExistingStory/ExistingStoryMain';\nimport CreateStoryMain from '../Story/CreateStory/CreateStoryMain.js';\nimport CreateStoryDetail from './../Story/CreateStory/CreateStoryDetail.js';\nimport CreateStoryChapter from './../Story/CreateStory/CreateStoryChapter.js';\nimport CreateStoryContributor from './../Story/CreateStory/CreateStoryContributor.js';\nimport NavButton from '../Nav/NavButton';\nimport ProtectedRoute from '../ProtectedRoute/ProtectedRoute'\n\n//for dev convenience\nimport FakeData from '../Faker/FakeData';\nimport ContributorPopup from '../Story/Contributor/ContributorPopup';\n\n//styling imports\nimport { Icon, Row, Col, BackTop } from \"antd\";\nimport './App.css';\nimport '../Nav/Nav.css';\n\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.dispatch({ type: 'FETCH_USER' })\n  }\n\n  render() {\n    // console.log('in ap render');\n    let journeyTellrLogo = './images/kevinslogos/JourneyTellr-Nameonly-color-noR.png'\n    return (\n      <Router>\n        <div>\n          {/* do NOT refactor out: this is the header, it is sourced in this file due to issues arising with navgationlink conditional rendering causing header to rerender */}\n          <Row type=\"flex\" justify=\"center\" align='middle' className='nav'>\n            <Col span={3}>\n              {this.props.user.id !== undefined &&\n                <NavButton />\n              }\n            </Col>\n            <Col span={18}>\n              <Link to=\"/home\">\n                <img src={journeyTellrLogo}\n                  alt={'logo'}\n                  className=\"logo\" />\n              </Link>\n            </Col>\n            <Col span={3} />\n          </Row>\n          {/* end header */}\n          <Switch>\n            {/* Visiting localhost:3000 will redirect to localhost:3000/home */}\n            <Redirect exact from=\"/\" to=\"/home\" />\n            <ProtectedRoute\n              exact path='/notification'\n              component={Notification}\n            />\n            <ProtectedRoute\n              exact path='/choose-template'\n              component={CreateStoryMain}\n            />\n            <ProtectedRoute\n              exact path='/profile'\n              component={ProfilePage}\n            />\n            <ProtectedRoute\n              exact path='/search'\n              component={SearchMain}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/home\"\n              component={HomePage}\n            />\n            <ProtectedRoute\n              exact\n              path=\"/contributor\"\n              component={ContributorPopup}\n            />\n            <ProtectedRoute\n              exact path='/existing-story/:id'\n              component={ExistingStoryMain}\n            />\n            <ProtectedRoute\n              exact path='/existing-story/:id/chapter/:chapterId'\n              component={ExistingStoryMain}\n            />\n            <Route\n              exact path='/fake-data'\n              component={FakeData}\n            />\n            <ProtectedRoute\n              exact path='/choose-template/detail/'\n              component={CreateStoryDetail}\n            />\n            <ProtectedRoute\n              exact path='/choose-template/chapter/'\n              component={CreateStoryChapter}\n            />\n            <ProtectedRoute\n              exact path='/choose-template/contributor/'\n              component={CreateStoryContributor}\n            />\n\n            {/* If none of the other routes matched, we will show a 404. */}\n            <Route render={() => <h1>404</h1>} />\n            {/*  */}\n          </Switch>\n          <BackTop />\n        </div>\n      </Router>\n    )\n  }\n}\n\nconst mapRStoProps = (rs) => {\n  return { user: rs.user.userInfo }\n}\n\nexport default connect(mapRStoProps)(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\n\nimport rootReducer from './redux/reducers'; // imports ./redux/reducers/index.js\nimport rootSaga from './redux/sagas'; // imports ./redux/sagas/index.js\n\nimport App from './components/App/App';\n\nconst sagaMiddleware = createSagaMiddleware();\n\n// this line creates an array of all of redux middleware you want to use\n// we don't want a whole ton of console logs in our production code\n// logger will only be added to your project if your in development mode\nconst middlewareList = process.env.NODE_ENV === 'development' ?\n  [sagaMiddleware, logger] :\n  [sagaMiddleware];\n\nconst store = createStore(\n  // tells the saga middleware to use the rootReducer\n  // rootSaga contains all of our other reducers\n  rootReducer,\n  // adds all middleware to our project including saga and logger\n  applyMiddleware(...middlewareList),\n);\n\n// tells the saga middleware to use the rootSaga\n// rootSaga contains all of our other sagas\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('react-root'),\n);\n"],"sourceRoot":""}